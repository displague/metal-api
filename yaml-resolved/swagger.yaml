---
swagger: "2.0"
info:
  description: This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
  version: 1.0.0
  title: Metal API
  termsOfService: https://metal.equinix.com/legal/
  contact:
    name: Equinix Metal API Team
    email: support@equinixmetal.com
  license:
    name: Equinix Metal
    url: https://metal.equinix.com/legal/
host: api.equinix.com
basePath: /metal/v1
tags:
- name: Batches
  description: Manage device batches. See project endpoints to list batches for a particular project. Check out the product docs to learn more about [Batch Deployment](https://metal.equinix.com/developers/docs/deploy/batch-deployment/).
- name: BGP
  description: Manage BGP configs and sessions. See device endpoints to create and list BGP sessions for a particular device. Check out the product docs to learn more about [Local and Global BGP](https://metal.equinix.com/developers/docs/networking/local-global-bgp/).
- name: Capacity
  description: Capacity Management. Check out the product docs to learn more about [Capacity](https://metal.equinix.com/developers/docs/locations/capacity/).
- name: Connections
  description: Network Interconnections. See Instructions to create Network Interconnections at Check out the product docs to learn more about [Equinix Fabric](https://metal.equinix.com/developers/docs/networking/fabric/).
- name: Devices
  description: Device Management. Check out the product docs to learn more about [Server Devices](https://metal.equinix.com/developers/docs/servers/).
- name: Emails
  description: Email Management
- name: Events
  description: Event Management
- name: Facilities
  description: Facility Management. Check out the product docs to learn more about [Facilities](https://metal.equinix.com/developers/docs/locations/).
- name: HardwareReservations
  description: Hardware Reservation Management. Check out the product docs to learn more about [Reserved Hardware](https://metal.equinix.com/developers/docs/deploy/reserved/).
- name: Invitations
  description: Manage invitations. See project endpoints to create a new invitation. Check out the product docs to learn more about [Invitations](https://metal.equinix.com/developers/docs/accounts/).
- name: IPAddresses
  description: Manage IP addresses. See device and project endpoints to list and create IP assignments for a particular project or device. Check out the product docs to learn more about [the basic networking features](https://metal.equinix.com/developers/docs/networking/standard-ips/).
- name: Licenses
  description: Manage licenses. See project endpoints to list and create licenses for a particular project.
- name: Memberships
  description: Membership Management (Project). Check out the product docs to learn more about [Membership](https://metal.equinix.com/developers/docs/accounts/).
- name: OperatingSystems
  description: Operating System Management. Check out the product docs to learn more about [Operating Systems choices](https://metal.equinix.com/developers/docs/operating-systems/).
- name: Organizations
  description: Organizations Management. Check out the product docs to learn more about [Organizations](https://metal.equinix.com/developers/docs/accounts/).
- name: Otps
  description: Otps ManagementCheck out the product docs to learn more about [OTP](https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/).
- name: PaymentMethods
  description: Payment Method Management
- name: Plans
  description: Plan Management (Device). Check out the product docs to learn more about [Device Plans](https://metal.equinix.com/developers/docs/servers/).
- name: Ports
  description: Port ManagementCheck out the product docs to learn more about [Port configurations](https://metal.equinix.com/developers/docs/networking/layer2/).
- name: Projects
  description: Project Management. Check out the product docs to learn more about [Projects](https://metal.equinix.com/developers/docs/accounts/).
- name: Regions
  description: Regions Listing
- name: Market
  description: Spot Market Prices Management. Check out the product docs to learn more about [Spot Market features](https://metal.equinix.com/developers/docs/deploy/spot-market/).
- name: SpotMarketRequest
  description: Spot Market Requests Management. Check out the product docs to learn more about [Spot Market features](https://metal.equinix.com/developers/docs/deploy/spot-market/).
- name: SSHKeys
  description: Manage SSH keys. See project endpoints to list and create project-level SSH keys.
- name: TransferRequests
  description: Project Transfer Requests Management
- name: TwoFactorAuth
  description: Two Factor Authentication Management. Check out the product docs to learn more about [2FA](https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/).
- name: Usages
  description: Usage Management
- name: Userdata
  description: Userdata Management
- name: Users
  description: User Management
- name: UserVerificationTokens
  description: User Verification Token Management
- name: VLANs
  description: Manage virtual networks (VLANs). See project endpoints to list and create virtual networks. Check out the product docs to learn more about [VLANs](https://metal.equinix.com/developers/docs/networking/layer2/).
- name: Volumes
  description: 'Volume Management (Block Storage). '
- name: VPN
  description: VPN Management. Check out the product docs to learn more about [Doorman VPN](https://metal.equinix.com/developers/docs/networking/features/).
consumes:
- application/json
produces:
- application/json
security:
- x_auth_token: []
paths:
  /projects/{id}/batches:
    get:
      tags:
      - Projects
      - Batches
      summary: Retrieve all batches by project
      description: Returns all batches for the given project
      operationId: findBatchesByProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/BatchesList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /batches/{id}:
    get:
      tags:
      - Batches
      summary: Retrieve a Batch
      description: Returns a Batch
      operationId: findBatchById
      parameters:
      - name: id
        in: path
        description: Batch UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Batch'
        "401":
          description: unauthorized
        "404":
          description: not found
    delete:
      tags:
      - Batches
      summary: Delete the Batch
      description: Deletes the Batch.
      operationId: deleteBatch
      parameters:
      - name: id
        in: path
        description: Batch UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: remove_associated_instances
        description: Default route
        required: true
        schema:
          type: boolean
      responses:
        "204":
          description: no content
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/bgp-configs:
    post:
      tags:
      - Projects
      - BGP
      summary: Requesting bgp config
      description: Requests to enable bgp configuration for a project.
      operationId: requestBgpConfig
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: bgp_config_request
        description: BGP config Request to create
        required: true
        schema:
          $ref: '#/definitions/BgpConfigRequestInput'
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /projects/{id}/bgp-config:
    get:
      tags:
      - Projects
      - BGP
      summary: Retrieve a bgp config
      description: Returns a bgp config
      operationId: findBgpConfigByProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: |
            ok

            When BGP configuration is not enabled empty structure is returned.
            When BGP configuration is disabled after being enabled BGP configuration data is returned with status disabled.
          schema:
            $ref: '#/definitions/BgpConfig'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: |
            not found

            The project was not found.
  /devices/{id}/bgp/neighbors:
    get:
      tags:
      - Devices
      - BGP
      summary: Retrieve BGP neighbor data for this device
      description: Provides a summary of the BGP neighbor data associated to the BGP sessions for this device.
      operationId: getBgpNeighborData
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/BgpSessionNeighbors'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/bgp/sessions:
    get:
      tags:
      - Projects
      - BGP
      summary: Retrieve all BGP sessions for project
      description: Provides a listing of available BGP sessions for the project.
      operationId: findProjectBgpSessions
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/BgpSessionList'
        "401":
          description: unauthorized
        "404":
          description: not found
  /devices/{id}/bgp/sessions:
    get:
      tags:
      - Devices
      - BGP
      summary: Retrieve all BGP sessions
      description: Provides a listing of available BGP sessions for the device.
      operationId: findBgpSessions
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/BgpSessionList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
    post:
      tags:
      - Devices
      - BGP
      summary: Create a BGP session
      description: Creates a BGP session.
      operationId: createBgpSession
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: bgp_session
        description: BGP session to create
        required: true
        schema:
          $ref: '#/definitions/BGPSessionInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/BgpSession'
        "201":
          description: created
          schema:
            $ref: '#/definitions/BgpSession'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "422":
          description: unprocessable entity
  /bgp/sessions/{id}:
    get:
      tags:
      - BGP
      summary: Retrieve a BGP session
      description: Returns a BGP session
      operationId: findBgpSessionById
      parameters:
      - name: id
        in: path
        description: BGP session UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/BgpSession'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - BGP
      summary: Update the BGP session
      description: Updates the BGP session by either enabling or disabling the default route functionality.
      operationId: updateBgpSession
      parameters:
      - name: id
        in: path
        description: BGP session UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: default_route
        description: Default route
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - BGP
      summary: Delete the BGP session
      description: Deletes the BGP session.
      operationId: deleteBgpSession
      parameters:
      - name: id
        in: path
        description: BGP session UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /capacity:
    get:
      tags:
      - Capacity
      summary: View capacity
      description: Returns a list of facilities and plans with their current capacity.
      operationId: findCapacity
      parameters: []
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/CapacityList'
        "401":
          description: unauthorized
    post:
      tags:
      - Capacity
      summary: Check capacity
      description: |-
        Validates if a deploy can be fulfilled.

        Response:
        ```
        "servers": [
            { "available": true, ... },
            { "available": false, ... }
        ]
        ```
      operationId: checkCapacity
      parameters:
      - in: body
        name: facility
        description: Facility to create
        required: true
        schema:
          $ref: '#/definitions/CapacityInput'
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /emails:
    post:
      tags:
      - Emails
      summary: Create an email
      description: Add a new email address to the current user.
      operationId: createEmail
      parameters:
      - in: body
        name: email
        description: Email to create
        required: true
        schema:
          $ref: '#/definitions/CreateEmailInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Email'
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /emails/{id}:
    get:
      tags:
      - Emails
      summary: Retrieve an email
      description: Provides one of the user’s emails.
      operationId: findEmailById
      parameters:
      - name: id
        in: path
        description: Email UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Email'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Emails
      summary: Update the email
      description: Updates the email.
      operationId: updateEmail
      parameters:
      - name: id
        in: path
        description: Email UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: email
        description: email to update
        required: true
        schema:
          $ref: '#/definitions/UpdateEmailInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Email'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Emails
      summary: Delete the email
      description: Deletes the email.
      operationId: deleteEmail
      parameters:
      - name: id
        in: path
        description: Email UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /devices/{id}/events:
    get:
      tags:
      - Events
      - Devices
      summary: Retrieve device's events
      description: Returns a list of events pertaining to a specific device
      operationId: findDeviceEvents
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/EventList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /organizations/{id}/events:
    get:
      tags:
      - Events
      - Organizations
      summary: Retrieve organization's events
      description: Returns a list of events for a single organization
      operationId: findOrganizationEvents
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/EventList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/events:
    get:
      tags:
      - Events
      - Projects
      summary: Retrieve project's events
      description: Returns a list of events for a single project
      operationId: findProjectEvents
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/EventList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /volumes/{id}/events:
    get:
      tags:
      - Events
      - Volumes
      summary: Retrieve volume's events
      description: Returns a list of the current volume’s events
      operationId: findVolumeEvents
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/EventList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /events:
    get:
      tags:
      - Events
      summary: Retrieve current user's events
      description: Returns a list of the current user’s events
      operationId: findEvents
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/EventList'
        "401":
          description: unauthorized
  /events/{id}:
    get:
      tags:
      - Events
      summary: Retrieve an event
      description: Returns a single event if the user has access
      operationId: findEventById
      parameters:
      - name: id
        in: path
        description: Event UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Event'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /connections/{id}/events:
    get:
      tags:
      - Events
      - Connections
      summary: Retrieve connection events
      description: Returns a list of the connection events
      operationId: findConnectionEvents
      parameters:
      - name: id
        in: path
        description: Connection UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Event'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /connections/{id}/ports/{portId}/events:
    get:
      tags:
      - Events
      - Connections
      summary: Retrieve connection port events
      description: Returns a list of the connection port events
      operationId: findConnectionPortEvents
      parameters:
      - name: id
        in: path
        description: Connection UUID
        required: true
        type: string
        format: uuid
      - name: portId
        in: path
        description: Connection Port UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Event'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /virtual-circuit/{id}/events:
    get:
      tags:
      - Events
      - Connections
      summary: Retrieve connection events
      description: Returns a list of the virtual circuit events
      operationId: findVirtualCircuitEvents
      parameters:
      - name: id
        in: path
        description: Virtual Circuit UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Event'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /facilities:
    get:
      tags:
      - Facilities
      summary: Retrieve all facilities
      description: Provides a listing of available datacenters where you can provision Packet devices.
      operationId: findFacilities
      parameters: []
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/FacilityList'
        "401":
          description: unauthorized
  /projects/{id}/facilities:
    get:
      tags:
      - Facilities
      - Projects
      summary: Retrieve all facilities visible by the project
      description: Returns a listing of available datacenters for the given project
      operationId: findFacilitiesByProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/FacilityList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /organizations/{id}/facilities:
    get:
      tags:
      - Facilities
      - Organizations
      summary: Retrieve all facilities visible by the organization
      description: Returns a listing of available datacenters for the given organization
      operationId: findFacilitiesByOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/FacilityList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/hardware-reservations:
    get:
      tags:
      - Projects
      - HardwareReservations
      summary: Retrieve all hardware reservations for a given project
      description: Provides a collection of hardware reservations for a given project.
      operationId: findProjectHardwareReservations
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/HardwareReservationList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /hardware-reservations/{id}:
    get:
      tags:
      - HardwareReservations
      summary: Retrieve a hardware reservation
      description: Returns a single hardware reservation
      operationId: findHardwareReservationById
      parameters:
      - name: id
        in: path
        description: HardwareReservation UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Device'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /incidents:
    get:
      tags:
      - incidents
      summary: Retrieve the number of incidents
      description: Retrieve the number of incidents.
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
  /devices/{id}/actions:
    post:
      tags:
      - Devices
      summary: Perform an action
      description: 'Performs an action for the given device.  Possible actions include: power_on, power_off, reboot, reinstall, and rescue (reboot the device into rescue OS.)'
      operationId: performAction
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - name: type
        in: query
        description: Action to perform
        required: true
        type: string
        enum:
        - power_on
        - power_off
        - reboot
        - rescue
        - reinstall
      responses:
        "202":
          description: accepted
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /organizations/{id}/devices:
    get:
      tags:
      - Organizations
      - Devices
      summary: Retrieve all devices of an organization
      description: Provides a collection of devices for a given organization.
      operationId: findOrganizationDevices
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/DeviceList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/devices:
    get:
      tags:
      - Projects
      - Devices
      summary: Retrieve all devices of a project
      description: Provides a collection of devices for a given project.
      operationId: findProjectDevices
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/DeviceList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Projects
      - Devices
      summary: Create a device
      description: |
        Creates a new device and provisions it in our datacenter.

        Type-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.

        The features attribute allows you to optionally specify what features your server should have.

        For example, if you require a server with a TPM chip, you may specify `{ "features": { "tpm": "required" } }` (or `{ "features": ["tpm"] }` in shorthand).

        The request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).

        The request will not fail if we have no servers with that feature in our inventory.

        The facilities attribute specifies in what datacenter you wish to create the device.

        You can either specify a single facility `{ "facility": "f1" }` , or you can instruct to create the device in the best available datacenter `{ "facility": "any" }`. Additionally it is possible to set a prioritized location selection.

        For example `{ "facility": ["f3", "f2", "any"] }` will try to assign to the facility f3, if there are no available f2, and so on. If "any" is not specified for "facility", the request will fail unless it can assign in the selected locations.

        The `ip_addresses attribute will allow you to specify the addresses you want created with your device.

        To maintain backwards compatibility, If the attribute is not sent in the request, it will be treated as if `{ "ip_addresses": [{ "address_family": 4, "public": true }, { "address_family": 4, "public": false }, { "address_family": 6, "public": true }] }` was sent.

        The private IPv4 address is required and always need to be sent in the array. Not all operating systems support no public IPv4 address, so in those cases you will receive an error message.

        For example, to only configure your server with a private IPv4 address, you can send `{ "ip_addresses": [{ "address_family": 4, "public": false }] }`.

        Note: when specifying a subnet size larger than a /30, you will need to supply the UUID(s) of existing ip_reservations in your project to assign IPs from.

        For example, `{ "ip_addresses": [..., {"address_family": 4, "public": true, "ip_reservations": ["uuid1", "uuid2"]}] }`

        To access a server without public IPs, you can use our Out-of-Band console access (SOS) or use another server with public IPs as a proxy.
      operationId: createDevice
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: device
        description: Device to create
        required: true
        schema:
          $ref: '#/definitions/DeviceCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Device'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /devices/{id}:
    get:
      tags:
      - Devices
      summary: Retrieve a device
      description: |-
        Type-specific options (such as facility for baremetal devices) will be included as part of the main data structure.
                                 State value can be one of: active inactive queued or provisioning
      operationId: findDeviceById
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Device'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Devices
      summary: Update the device
      description: Updates the device.
      operationId: updateDevice
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: device
        description: Facility to update
        required: true
        schema:
          $ref: '#/definitions/DeviceUpdateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Device'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Devices
      summary: Delete the device
      description: Deletes a device and deprovisions it in our datacenter.
      operationId: deleteDevice
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - name: force_delete
        in: query
        description: Force the deletion of the device, by detaching any storage volume still active.
        required: false
        type: boolean
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/devices/batch:
    post:
      tags:
      - Devices
      - Batches
      summary: Create a devices batch
      description: |-
        Creates new devices in batch and provisions them in our datacenter.

        Type-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.

        The features attribute allows you to optionally specify what features your server should have.

        For example, if you require a server with a TPM chip, you may specify `{ "features": { "tpm": "required" } }` (or `{ "features": ["tpm"] }` in shorthand).

        The request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).

        The request will not fail if we have no servers with that feature in our inventory.

        The facilities attribute specifies in what datacenter you wish to create the device.

        You can either specify a single facility `{ "facility": "f1" }` , or you can instruct to create the device in the best available datacenter `{ "facility": "any" }`. Additionally it is possible to set a prioritized location selection.

        For example `{ "facility": ["f3", "f2", "any"] }` will try to assign to the facility f3, if there are no available f2, and so on. If "any" is not specified for "facility", the request will fail unless it can assign in the selected locations.

        With `{ "facility": "any" }` you have the option to diversify to indicate how many facilities you are willing to be spread across. For this purpose use parameter: `facility_diversity_level = N`.

        For example:

        `{ "facilities": ["sjc1", "ewr1", "any"] ,  "facility_diversity_level" = 1, "quantity" = 10 }` will assign 10 devices into the same facility, trying first in "sjc1", and if there aren’t available, it will try in  "ewr1", otherwise any other.

        The `ip_addresses` attribute will allow you to specify the addresses you want created with your device.

        To maintain backwards compatibility, If the attribute is not sent in the request, it will be treated as if `{ "ip_addresses": [{ "address_family": 4, "public": true }, { "address_family": 4, "public": false }, { "address_family": 6, "public": true }] }` was sent.

        The private IPv4 address is required and always need to be sent in the array. Not all operating systems support no public IPv4 address, so in those cases you will receive an error message.

        For example, to only configure your server with a private IPv4 address, you can send `{ "ip_addresses": [{ "address_family": 4, "public": false }] }`.

        Note: when specifying a subnet size larger than a /30, you will need to supply the UUID(s) of existing ip_reservations in your project to assign IPs from.

        For example, `{ "ip_addresses": [..., {"address_family": 4, "public": true, "ip_reservations": ["uuid1", "uuid2"]}] }`

        To access a server without public IPs, you can use our Out-of-Band console access (SOS) or use another server with public IPs as a proxy.
      operationId: createDeviceBatch
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: batch
        description: Batches to create
        required: true
        schema:
          $ref: '#/definitions/InstancesBatchCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/BatchesList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /devices/{id}/bandwidth:
    get:
      tags:
      - Devices
      summary: Retrieve an instance bandwidth
      description: Retrieve an instance bandwidth for a given period of time.
      operationId: findInstanceBandwidth
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - name: from
        in: query
        description: Timestamp from range
        required: true
        type: string
      - name: until
        in: query
        description: Timestamp to range
        required: true
        type: string
      responses:
        "200":
          description: ok
        "403":
          description: forbidden
        "404":
          description: not found
  /organizations/{organization_id}/connections:
    get:
      tags:
      - Connections
      summary: List organization connections
      description: List the connections belonging to the organization
      operationId: organizationListInterconnections
      parameters:
      - name: organization_id
        in: path
        description: UUID of the organization
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/InterconnectionList'
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Connections
      summary: Request a new connection for the organization
      description: Creates a new connection request. A Project ID must be specified in the request body for connections on shared ports.
      operationId: createOrganizationInterconnection
      parameters:
      - name: organization_id
        in: path
        description: UUID of the organization
        required: true
        type: string
        format: uuid
      - in: body
        name: connection
        description: Connection details
        required: true
        schema:
          $ref: '#/definitions/InterconnectionCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Interconnection'
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{project_id}/connections:
    get:
      tags:
      - Connections
      summary: List project connections
      description: List the connections belonging to the project
      operationId: projectListInterconnections
      parameters:
      - name: project_id
        in: path
        description: UUID of the project
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/InterconnectionList'
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Connections
      summary: Request a new connection for the project's organization
      description: Creates a new connection request
      operationId: createProjectInterconnection
      parameters:
      - name: project_id
        in: path
        description: UUID of the project
        required: true
        type: string
        format: uuid
      - in: body
        name: connection
        description: Connection details
        required: true
        schema:
          $ref: '#/definitions/InterconnectionCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Interconnection'
        "403":
          description: forbidden
  /connections/{id}:
    get:
      tags:
      - Connections
      summary: Get connection
      description: Get the details of a connection
      operationId: getInterconnection
      parameters:
      - name: id
        in: path
        description: Connection UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Interconnection'
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Connections
      summary: Update connection
      description: Update the details of a connection
      operationId: updateInterconnection
      parameters:
      - name: id
        in: path
        description: Connection UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: connection
        description: Updated connection details
        required: true
        schema:
          $ref: '#/definitions/InterconnectionUpdateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Interconnection'
        "403":
          description: forbidden
        "404":
          description: not found
    delete:
      tags:
      - Connections
      summary: Delete connection
      description: Delete a connection, its associated ports and virtual circuits.
      operationId: deleteInterconnection
      parameters:
      - name: id
        in: path
        description: Connection UUID
        required: true
        type: string
        format: uuid
      responses:
        "202":
          description: accepted
          schema:
            $ref: '#/definitions/Interconnection'
        "403":
          description: forbidden
        "404":
          description: not found
  /connections/{connection_id}/ports:
    get:
      tags:
      - Connections
      summary: List a connection's ports
      description: List the ports associated to an connection.
      operationId: listConnectionPorts
      parameters:
      - name: connection_id
        in: path
        description: UUID of the connection
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/InterconnectionPortList'
        "403":
          description: forbidden
        "404":
          description: not found
  /connections/{connection_id}/ports/{id}:
    get:
      tags:
      - Connections
      summary: Get a connection port
      description: Get the details of an connection port.
      operationId: getConnectionPort
      parameters:
      - name: connection_id
        in: path
        description: UUID of the connection
        required: true
        type: string
        format: uuid
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/InterconnectionPort'
        "403":
          description: forbidden
        "404":
          description: not found
  /connections/{connection_id}/ports/{port_id}/virtual-circuits:
    get:
      tags:
      - Connections
      summary: List a connection port's virtual circuits
      description: List the virtual circuit record(s) associatiated with a particular connection port.
      operationId: listConnectionPortVirtualCircuits
      parameters:
      - name: connection_id
        in: path
        description: UUID of the connection
        required: true
        type: string
        format: uuid
      - name: port_id
        in: path
        description: UUID of the connection port
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VirtualCircuitList'
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Connections
      summary: Create a new Virtual Circuit
      description: Create a new Virtual Circuit on a dedicated connection using a Virtual Network record and an NNI VLAN value.
      operationId: createConnectionPortVirtualCircuit
      parameters:
      - name: connection_id
        in: path
        description: UUID of the connection
        required: true
        type: string
        format: uuid
      - name: port_id
        in: path
        description: UUID of the connection port
        required: true
        type: string
        format: uuid
      - in: body
        name: virtual_circuit
        description: Virtual Circuit details
        required: true
        schema:
          $ref: '#/definitions/VirtualCircuitCreateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VirtualCircuitList'
        "403":
          description: forbidden
        "404":
          description: not found
  /virtual-circuits/{id}:
    get:
      tags:
      - Connections
      summary: Get a virtual circuit
      description: Get the details of a virtual circuit
      operationId: getVirtualCircuit
      parameters:
      - name: id
        in: path
        description: Virtual Circuit UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VirtualCircuit'
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Connections
      summary: Update a virtual circuit
      description: Update the details of a virtual circuit.
      operationId: updateVirtualCircuit
      parameters:
      - name: id
        in: path
        description: Virtual Circuit UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: virtual_circuit
        description: Updated Virtual Circuit details
        required: true
        schema:
          $ref: '#/definitions/VirtualCircuitUpdateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VirtualCircuit'
        "202":
          description: accepted
          schema:
            $ref: '#/definitions/VirtualCircuit'
        "403":
          description: forbidden
        "404":
          description: not found
    delete:
      tags:
      - Connections
      summary: Delete a virtual circuit
      description: Delete a virtual circuit from a dedicated port.
      operationId: deleteVirtualCircuit
      parameters:
      - name: id
        in: path
        description: Virtual Circuit UUID
        required: true
        type: string
        format: uuid
      responses:
        "202":
          description: accepted
          schema:
            $ref: '#/definitions/VirtualCircuit'
        "403":
          description: forbidden
        "404":
          description: not found
  /virtual-networks/{id}/internet-gateways:
    post:
      tags:
      - InternetGateways
      - VLANs
      summary: Create an internet gateway
      description: Creates an internet gateway.
      operationId: createInternetGateway
      parameters:
      - name: id
        in: path
        description: Virtual Network UUID
        required: true
        type: string
        format: uuid
      - name: length
        in: query
        description: IP Reservation length
        required: true
        type: string
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/InternetGateway'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /invitations/{id}:
    get:
      tags:
      - Invitations
      summary: View an invitation
      description: Returns a single invitation. (It include the `invitable` to maintain backward compatibility but will be removed soon)
      operationId: findInvitationById
      parameters:
      - name: id
        in: path
        description: Invitation UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Invitation'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Invitations
      summary: Accept an invitation
      description: Accept an invitation.
      operationId: acceptInvitation
      parameters:
      - name: id
        in: path
        description: Invitation UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Membership'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    delete:
      tags:
      - Invitations
      summary: Decline an invitation
      description: Decline an invitation.
      operationId: declineInvitation
      parameters:
      - name: id
        in: path
        description: Invitation UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{project_id}/invitations:
    get:
      tags:
      - Invitations
      - Projects
      summary: Retrieve project invitations
      description: Returns all invitations in a project.
      operationId: findProjectInvitations
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      - name: project_id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/InvitationList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Invitations
      - Projects
      summary: Create an invitation for a project
      description: In order to add a user to a project, they must first be invited.
      operationId: createProjectInvitation
      parameters:
      - name: project_id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: invitation
        description: Invitation to create
        required: true
        schema:
          $ref: '#/definitions/InvitationInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Invitation'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /organizations/{id}/invitations:
    get:
      tags:
      - Invitations
      - Organizations
      summary: Retrieve organization invitations
      description: Returns all invitations in an organization.
      operationId: findOrganizationInvitations
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/InvitationList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Invitations
      - Organizations
      summary: Create an invitation for an organization
      description: |-
        In order to add a user to an organization, they must first be invited.
        To invite to several projects the parameter `projects_ids:[a,b,c]` can be used
      operationId: createOrganizationInvitation
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: invitation
        description: Invitation to create
        required: true
        schema:
          $ref: '#/definitions/InvitationInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Invitation'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /invitations:
    get:
      tags:
      - Invitations
      - Users
      summary: Retrieve current user invitations
      description: Returns all invitations in current user.
      operationId: findInvitations
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/InvitationList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /ips/{id}:
    get:
      tags:
      - IPAddresses
      summary: Retrieve an ip address
      description: Returns a single ip address if the user has access.
      operationId: findIPAddressById
      parameters:
      - name: id
        in: path
        description: IP Address UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/IPAssignment'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    delete:
      tags:
      - IPAddresses
      summary: Unassign an ip address
      description: Note! This call can be used to un-assign an IP assignment or delete an IP reservation. Un-assign an IP address record. Use the assignment UUID you get after attaching the IP. This will remove the relationship between an IP and the device and will make the IP address available to be assigned to another device. Delete and IP reservation. Use the reservation UUID you get after adding the IP to the project. This will permanently delete the IP block reservation from the project.
      operationId: deleteIPAddress
      parameters:
      - name: id
        in: path
        description: IP Address UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /devices/{id}/ips:
    get:
      tags:
      - Devices
      - IPAddresses
      summary: Retrieve all ip assignments
      description: Returns all ip assignments for a device.
      operationId: findIPAssignments
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/IPAssignmentList'
        "401":
          description: unauthorized
        "404":
          description: not found
    post:
      tags:
      - Devices
      - IPAddresses
      summary: Create a ip assignment
      description: Creates an ip assignment for a device.
      operationId: createIPAssignment
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: ip_assignment
        description: IPAssignment to create
        required: true
        schema:
          $ref: '#/definitions/IPAssignmentInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/IPAssignment'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /ips/{id}/available:
    get:
      tags:
      - IPAddresses
      summary: Retrieve all available subnets of a particular reservation
      description: Provides a list of IP resevations for a single project.
      operationId: findIPAvailabilities
      parameters:
      - name: id
        in: path
        description: IP Reservation UUID
        required: true
        type: string
        format: uuid
      - name: cidr
        in: query
        description: Size of subnets in bits
        required: true
        type: string
        enum:
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"
        - "32"
        - "33"
        - "34"
        - "35"
        - "36"
        - "37"
        - "38"
        - "39"
        - "40"
        - "41"
        - "42"
        - "43"
        - "44"
        - "45"
        - "46"
        - "47"
        - "48"
        - "49"
        - "50"
        - "51"
        - "52"
        - "53"
        - "54"
        - "55"
        - "56"
        - "57"
        - "58"
        - "59"
        - "60"
        - "61"
        - "62"
        - "63"
        - "64"
        - "65"
        - "66"
        - "67"
        - "68"
        - "69"
        - "70"
        - "71"
        - "72"
        - "73"
        - "74"
        - "75"
        - "76"
        - "77"
        - "78"
        - "79"
        - "80"
        - "81"
        - "82"
        - "83"
        - "84"
        - "85"
        - "86"
        - "87"
        - "88"
        - "89"
        - "90"
        - "91"
        - "92"
        - "93"
        - "94"
        - "95"
        - "96"
        - "97"
        - "98"
        - "99"
        - "100"
        - "101"
        - "102"
        - "103"
        - "104"
        - "105"
        - "106"
        - "107"
        - "108"
        - "109"
        - "110"
        - "111"
        - "112"
        - "113"
        - "114"
        - "115"
        - "116"
        - "117"
        - "118"
        - "119"
        - "120"
        - "121"
        - "122"
        - "123"
        - "124"
        - "125"
        - "126"
        - "127"
        - "128"
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/IPAvailabilitiesList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/ips:
    get:
      tags:
      - Projects
      - IPAddresses
      summary: Retrieve all ip reservations
      description: Provides a list of IP resevations for a single project.
      operationId: findIPReservations
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/IPReservationList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Projects
      - IPAddresses
      summary: Requesting IP reservations
      description: Request more IP space for a project in order to have additional IP addresses to assign to devices.  If the request is within the max quota, an IP reservation will be created. If the project will exceed its IP quota, a request will be submitted for review, and will return an IP Reservation with a `state` of `pending`. You can automatically have the request fail with HTTP status 422 instead of triggering the review process by providing the `fail_on_approval_required` parameter set to `true` in the request.
      operationId: requestIPReservation
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: ip_reservation_request
        description: IP Reservation Request to create
        required: true
        schema:
          $ref: '#/definitions/IPReservationRequestInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/IPReservation'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /projects/{id}/licenses:
    get:
      tags:
      - Projects
      - Licenses
      summary: Retrieve all licenses
      description: Provides a collection of licenses for a given project.
      operationId: findProjectLicenses
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/LicenseList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Projects
      - Licenses
      summary: Create a License
      description: Creates a new license for the given project
      operationId: createLicense
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: license
        description: License to create
        required: true
        schema:
          $ref: '#/definitions/LicenseCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/License'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /licenses/{id}:
    get:
      tags:
      - Licenses
      summary: Retrieve a license
      description: Returns a license
      operationId: findLicenseById
      parameters:
      - name: id
        in: path
        description: License UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/License'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Licenses
      summary: Update the license
      description: Updates the license.
      operationId: updateLicense
      parameters:
      - name: id
        in: path
        description: License UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: license
        description: License to update
        required: true
        schema:
          $ref: '#/definitions/LicenseUpdateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/License'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Licenses
      summary: Delete the license
      description: Deletes a license.
      operationId: deleteLicense
      parameters:
      - name: id
        in: path
        description: License UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{project_id}/memberships:
    get:
      tags:
      - Projects
      - Memberships
      summary: Retrieve project memberships
      description: Returns all memberships in a project.
      operationId: findProjectMemberships
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      - name: project_id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/MembershipList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /memberships/{id}:
    get:
      tags:
      - Memberships
      summary: Retrieve a membership
      description: Returns a single membership.
      operationId: findMembershipById
      parameters:
      - name: id
        in: path
        description: Membership UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Membership'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Memberships
      summary: Update the membership
      description: Updates the membership.
      operationId: updateMembership
      parameters:
      - name: id
        in: path
        description: Membership UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: membership
        description: Membership to update
        required: true
        schema:
          $ref: '#/definitions/MembershipInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Membership'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Memberships
      summary: Delete the membership
      description: Deletes the membership.
      operationId: deleteMembership
      parameters:
      - name: id
        in: path
        description: Membership UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/customdata:
    get:
      tags:
      - Projects
      summary: Retrieve the custom metadata of a project
      description: Provides the custom metadata stored for this project in json format
      operationId: findProjectCustomdata
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /organizations/{id}/customdata:
    get:
      tags:
      - Organizations
      summary: Retrieve the custom metadata of an organization
      description: Provides the custom metadata stored for this organization in json format
      operationId: findOrganizationCustomdata
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /users/{id}/customdata:
    get:
      tags:
      - Users
      summary: Retrieve the custom metadata of a user
      description: Provides the custom metadata stored for this user in json format
      operationId: findUserCustomdata
      parameters:
      - name: id
        in: path
        description: User UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /devices/{id}/customdata:
    get:
      tags:
      - Devices
      summary: Retrieve the custom metadata of an instance
      description: Provides the custom metadata stored for this instance in json format
      operationId: findDeviceCustomdata
      parameters:
      - name: id
        in: path
        description: Instance UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /storage/{id}/customdata:
    get:
      tags:
      - Volumes
      summary: Retrieve the custom metadata of a storage volume
      description: Provides the custom metadata stored for this storage volume in json format
      operationId: findVolumeCustomdata
      parameters:
      - name: id
        in: path
        description: Storage Volume UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{project_id}/ips/{id}/customdata:
    get:
      tags:
      - Projects
      summary: Retrieve the custom metadata of an IP Reservation
      description: Provides the custom metadata stored for this IP Reservation in json format
      operationId: findIPReservationCustomdata
      parameters:
      - name: project_id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: id
        in: path
        description: Ip Reservation UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /devices/{instance_id}/ips/{id}/customdata:
    get:
      tags:
      - Devices
      summary: Retrieve the custom metadata of an IP Assignment
      description: Provides the custom metadata stored for this IP Assignment in json format
      operationId: findIPAssignmentCustomdata
      parameters:
      - name: instance_id
        in: path
        description: Instance UUID
        required: true
        type: string
        format: uuid
      - name: id
        in: path
        description: Ip Assignment UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /ips/{id}/customdata:
    get:
      tags:
      - IPAddresses
      summary: Retrieve the custom metadata of an IP Reservation or IP Assignment
      description: Provides the custom metadata stored for this IP Reservation or IP Assignment in json format
      operationId: findIPAddressCustomdata
      parameters:
      - name: id
        in: path
        description: Ip Reservation UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /hardware-reservations/{id}/move:
    post:
      tags:
      - HardwareReservations
      summary: Move a hardware reservation
      description: Move a hardware reservation to another project
      parameters:
      - name: id
        in: path
        description: Hardware Reservation UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: project_id
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/HardwareReservation'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /organizations/{id}/operating-systems:
    get:
      tags:
      - OperatingSystems
      - Organizations
      summary: Retrieve all operating systems visible by the organization
      description: Returns a listing of available operating systems for the given organization
      operationId: findOperatingSystemsByOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/OperatingSystemList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /operating-systems:
    get:
      tags:
      - OperatingSystems
      summary: Retrieve all operating systems
      description: Provides a listing of available operating systems to provision your new device with.
      operationId: findOperatingSystems
      parameters: []
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/OperatingSystemList'
        "401":
          description: unauthorized
  /operating-system-versions:
    get:
      tags:
      - OperatingSystemVersions
      summary: Retrieve all operating system versions
      description: Provides a listing of available operating system versions.
      operationId: findOperatingSystemVersion
      parameters: []
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/OperatingSystemList'
        "401":
          description: unauthorized
  /organizations:
    get:
      tags:
      - Organizations
      summary: Retrieve all organizations
      description: Returns a list of organizations that are accessible to the current user.
      operationId: findOrganizations
      parameters:
      - name: personal
        in: query
        description: Include, exclude or show only personal organizations.
        required: false
        type: string
        enum:
        - include
        - exclude
        - only
      - name: without_projects
        in: query
        description: Include, exclude or show only organizations that have no projects.
        required: false
        type: string
        enum:
        - include
        - exclude
        - only
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/OrganizationList'
        "401":
          description: unauthorized
    post:
      tags:
      - Organizations
      summary: Create an organization
      description: Creates an organization.
      operationId: createOrganization
      parameters:
      - in: body
        name: organization
        description: Organization to create
        required: true
        schema:
          $ref: '#/definitions/OrganizationInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Organization'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /organizations/{id}:
    get:
      tags:
      - Organizations
      summary: Retrieve an organization's details
      description: Returns a single organization's details, if the user is authorized to view it.
      operationId: findOrganizationById
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Organization'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Organizations
      summary: Update the organization
      description: Updates the organization.
      operationId: updateOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: organization
        description: Organization to update
        required: true
        schema:
          $ref: '#/definitions/OrganizationInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Organization'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Organizations
      summary: Delete the organization
      description: Deletes the organization.
      operationId: deleteOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "404":
          description: not found
  /user/otp/recovery-codes:
    get:
      tags:
      - Otps
      summary: Retrieve my recovery codes
      description: Returns my recovery codes.
      operationId: findRecoveryCodes
      parameters: []
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/RecoveryCodeList'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
    post:
      tags:
      - Otps
      summary: Generate new recovery codes
      description: Generate a new set of recovery codes.
      operationId: regenerateCodes
      parameters: []
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/RecoveryCodeList'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /user/otp/verify/{otp}:
    post:
      tags:
      - Otps
      summary: Verify user by providing an OTP
      description: It verifies the user once a valid OTP is provided. It gives back a session token, essentially logging in the user.
      operationId: findEnsureOtp
      parameters:
      - name: otp
        in: path
        description: OTP
        required: true
        type: string
      responses:
        "204":
          description: no content
        "400":
          description: bad request
        "401":
          description: unauthorized
  /user/otp/sms/receive:
    post:
      tags:
      - Otps
      summary: Receive an OTP per sms
      description: Sends an OTP to the user's mobile phone.
      operationId: receiveCodes
      parameters: []
      responses:
        "204":
          description: no content
        "400":
          description: bad request
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
        "500":
          description: internal server error
  /reset-password:
    post:
      tags:
      - PasswordResetTokens
      summary: Create a password reset token
      description: Creates a password reset token
      operationId: createPasswordResetToken
      parameters:
      - name: email
        in: query
        description: Email of user to create password reset token
        required: true
        type: string
      responses:
        "201":
          description: created
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
    delete:
      tags:
      - PasswordResetTokens
      summary: Reset current user password
      description: Resets current user password.
      operationId: resetPassword
      parameters: []
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/NewPassword'
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /organizations/{id}/payment-methods:
    get:
      tags:
      - Organizations
      - PaymentMethods
      summary: Retrieve all payment methods of an organization
      description: Returns all payment methods of an organization.
      operationId: findOrganizationPaymentMethods
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/PaymentMethodList'
        "401":
          description: unauthorized
        "404":
          description: not found
    post:
      tags:
      - Organizations
      - PaymentMethods
      summary: Create a payment method for the given organization
      description: Creates a payment method.
      operationId: createPaymentMethod
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: payment_method
        description: Payment Method to create
        required: true
        schema:
          $ref: '#/definitions/PaymentMethodCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/PaymentMethod'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /payment-methods/{id}:
    get:
      tags:
      - PaymentMethods
      summary: Retrieve a payment method
      description: Returns a payment method
      operationId: findPaymentMethodById
      parameters:
      - name: id
        in: path
        description: Payment Method UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/PaymentMethod'
        "401":
          description: unauthorized
        "404":
          description: not found
    put:
      tags:
      - PaymentMethods
      summary: Update the payment method
      description: Updates the payment method.
      operationId: updatePaymentMethod
      parameters:
      - name: id
        in: path
        description: Payment Method UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: payment_method
        description: Payment Method to update
        required: true
        schema:
          $ref: '#/definitions/PaymentMethodUpdateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/PaymentMethod'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - PaymentMethods
      summary: Delete the payment method
      description: Deletes the payment method.
      operationId: deletePaymentMethod
      parameters:
      - name: id
        in: path
        description: Payment Method UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "404":
          description: not found
  /plans:
    get:
      tags:
      - Plans
      summary: Retrieve all plans
      description: Provides a listing of available plans to provision your device on.
      operationId: findPlans
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/PlanList'
        "401":
          description: unauthorized
  /projects/{id}/plans:
    get:
      tags:
      - Plans
      - Projects
      summary: Retrieve all plans visible by the project
      description: Returns a listing of available plans for the given project
      operationId: findPlansByProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/PlanList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /organizations/{id}/plans:
    get:
      tags:
      - Plans
      - Organizations
      summary: Retrieve all plans visible by the organization
      description: Returns a listing of available plans for the given organization
      operationId: findPlansByOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/PlanList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /ports/{id}/assign:
    post:
      tags:
      - Ports
      summary: Assign a port to virtual network
      description: Assign a port for a hardware to virtual network.
      operationId: assignPort
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: vnid
        description: Virtual Network ID
        required: true
        schema:
          $ref: '#/definitions/PortAssignInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Port'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /ports/{id}/unassign:
    post:
      tags:
      - Ports
      summary: Unassign a port
      description: Unassign a port for a hardware.
      operationId: unassignPort
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: vnid
        description: Virtual Network ID
        required: true
        schema:
          $ref: '#/definitions/PortAssignInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Port'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /ports/{id}/disbond:
    post:
      tags:
      - Ports
      summary: Disabling bonding
      description: Disabling bonding for one or all ports
      operationId: disbondPort
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      - name: bulk_disable
        in: query
        description: disable both ports
        required: false
        type: boolean
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Port'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /ports/{id}/bond:
    post:
      tags:
      - Ports
      summary: Enabling bonding
      description: Enabling bonding for one or all ports
      operationId: bondPort
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      - name: bulk_enable
        in: query
        description: enable both ports
        required: false
        type: boolean
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Port'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /ports/{id}/convert/layer-2:
    post:
      tags:
      - Ports
      summary: Convert to Layer 2
      description: Converts a bond port to Layer 2. IP assignments of the port will be removed.
      operationId: convertLayer2
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: vnid
        description: Virtual Network ID
        required: false
        schema:
          $ref: '#/definitions/PortAssignInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Port'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /ports/{id}/convert/layer-3:
    post:
      tags:
      - Ports
      summary: Convert to Layer 3
      description: Converts a bond port to Layer 3. VLANs must first be unassigned.
      operationId: convertLayer3
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: request_ips
        description: IPs to request
        required: false
        schema:
          $ref: '#/definitions/PortConvertLayer3Input'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Port'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /ports/{id}/native-vlan:
    post:
      tags:
      - Ports
      - VLANs
      summary: Assign a native VLAN
      description: Assigns a virtual network to this port as a "native VLAN"
      operationId: assignNativeVlan
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      - name: vnid
        in: query
        description: UUID or VNID of the virtual network to assign
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Port'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Ports
      - VLANs
      summary: Remove native VLAN
      description: Removes the native VLAN from this port
      operationId: deleteNativeVlan
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Port'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /organizations/{id}/projects:
    get:
      tags:
      - Organizations
      - Projects
      summary: Retrieve all projects of an organization
      description: Returns a collection of projects that belong to the organization.
      operationId: findOrganizationProjects
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/ProjectList'
        "401":
          description: unauthorized
    post:
      tags:
      - Organizations
      - Projects
      summary: Create a project for the organization
      description: Creates a new project for the organization
      operationId: createOrganizationProject
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: project
        description: Project to create
        required: true
        schema:
          $ref: '#/definitions/ProjectCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Project'
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /projects:
    get:
      tags:
      - Projects
      summary: Retrieve all projects
      description: Returns a collection of projects that the current user is a member of.
      operationId: findProjects
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/ProjectList'
        "401":
          description: unauthorized
    post:
      tags:
      - Projects
      summary: Create a project
      description: Creates a new project for the user default organization. If the user don't have an organization, a new one will be created.
      operationId: createProject
      parameters:
      - in: body
        name: project
        description: Project to create
        required: true
        schema:
          $ref: '#/definitions/ProjectCreateFromRootInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Project'
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /projects/{id}:
    get:
      tags:
      - Projects
      summary: Retrieve a project
      description: Returns a single project if the user has access
      operationId: findProjectById
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Project'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Projects
      summary: Update the project
      description: Updates the project.
      operationId: updateProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: project
        description: Project to update
        required: true
        schema:
          $ref: '#/definitions/ProjectUpdateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Project'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Projects
      summary: Delete the project
      description: Deletes the project.
      operationId: deleteProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /regions:
    get:
      tags:
      - Regions
      summary: Retrieve all regions
      description: Returns all regions.
      operationId: findRegions
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/RegionsList'
        "401":
          description: unauthorized
  /market/spot/prices:
    get:
      tags:
      - Market
      summary: Get current spot market prices
      description: Get Equinix Metal current spot market prices.
      operationId: findSpotMarketPrices
      parameters:
      - name: facility
        in: query
        description: Facility to check spot market prices
        required: false
        type: string
      - name: plan
        in: query
        description: Plan to check spot market prices
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SpotMarketPricesList'
  /market/spot/prices/history:
    get:
      tags:
      - Market
      summary: Get spot market prices for a given period of time
      description: |-
        Get spot market prices for a given plan and facility in a fixed period of time

        *Note: In the `200` response, the property `datapoints` contains arrays of `[float, integer]`.*
      operationId: findSpotMarketPricesHistory
      parameters:
      - name: facility
        in: query
        description: Facility to check spot market prices
        required: true
        type: string
      - name: plan
        in: query
        description: Plan to check spot market prices
        required: true
        type: string
      - name: from
        in: query
        description: Timestamp from range
        required: true
        type: string
      - name: until
        in: query
        description: Timestamp to range
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SpotPricesHistoryReport'
  /projects/{id}/spot-market-requests:
    get:
      tags:
      - Projects
      - SpotMarketRequest
      summary: List spot market requests
      description: View all spot market requests for a given project.
      operationId: listSpotMarketRequests
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SpotMarketRequestList'
        "401":
          description: unauthorized
        "404":
          description: not found
    post:
      tags:
      - Projects
      - SpotMarketRequest
      summary: Create a spot market request
      description: |-
        Creates a new spot market request.

        Type-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.

        The features attribute allows you to optionally specify what features your server should have. For example, if you require a server with a TPM chip, you may specify `{ "features": { "tpm": "required" } }` (or `{ "features": ["tpm"] }` in shorthand).

        The request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).

        The request will not fail if we have no servers with that feature in our inventory.
      operationId: createSpotMarketRequest
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: spot_market_request
        description: Spot Market Request to create
        required: true
        schema:
          $ref: '#/definitions/SpotMarketRequestCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/SpotMarketRequest'
        "401":
          description: unauthorized
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /spot-market-requests/{id}:
    get:
      tags:
      - SpotMarketRequest
      summary: Retrieve a spot market request
      description: Returns a single spot market request
      operationId: findSpotMarketRequestById
      parameters:
      - name: id
        in: path
        description: SpotMarketRequest UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SpotMarketRequest'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    delete:
      tags:
      - SpotMarketRequest
      summary: Delete the spot market request
      description: Deletes the spot market request.
      operationId: deleteSpotMarketRequest
      parameters:
      - name: id
        in: path
        description: SpotMarketRequest UUID
        required: true
        type: string
        format: uuid
      - name: force_termination
        in: query
        description: Terminate associated spot instances
        required: false
        type: boolean
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /ssh-keys:
    get:
      tags:
      - SSHKeys
      summary: Retrieve all ssh keys
      description: Returns a collection of the user’s ssh keys.
      operationId: findSSHKeys
      parameters:
      - name: Search string
        in: query
        description: Search by key, label, or fingerprint
        required: false
        type: string
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SSHKeyList'
        "401":
          description: unauthorized
    post:
      tags:
      - SSHKeys
      summary: Create a ssh key for the current user
      description: Creates a ssh key.
      operationId: createSSHKey
      parameters:
      - in: body
        name: ssh key
        description: ssh key to create
        required: true
        schema:
          $ref: '#/definitions/SSHKeyInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/SSHKey'
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /projects/{id}/ssh-keys:
    get:
      tags:
      - Projects
      - SSHKeys
      summary: Retrieve a project's ssh keys
      description: Returns a collection of the project's ssh keys.
      operationId: findProjectSSHKeys
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: Search string
        in: query
        description: Search by key, label, or fingerprint
        required: false
        type: string
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SSHKeyList'
        "401":
          description: unauthorized
    post:
      tags:
      - Projects
      - SSHKeys
      summary: Create a ssh key for the given project
      description: Creates a ssh key.
      operationId: createProjectSSHKey
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: ssh key
        description: ssh key to create
        required: true
        schema:
          $ref: '#/definitions/SSHKeyInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/SSHKey'
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /devices/{id}/ssh-keys:
    get:
      tags:
      - Projects
      - SSHKeys
      summary: Retrieve a device's ssh keys
      description: Returns a collection of the device's ssh keys.
      operationId: findDeviceSSHKeys
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: Search string
        in: query
        description: Search by key, label, or fingerprint
        required: false
        type: string
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SSHKeyList'
        "401":
          description: unauthorized
  /ssh-keys/{id}:
    get:
      tags:
      - SSHKeys
      summary: Retrieve a ssh key
      description: Returns a single ssh key if the user has access
      operationId: findSSHKeyById
      parameters:
      - name: id
        in: path
        description: SSH Key UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SSHKey'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - SSHKeys
      summary: Update the ssh key
      description: Updates the ssh key.
      operationId: updateSSHKey
      parameters:
      - name: id
        in: path
        description: SSH Key UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: ssh key
        description: ssh key to update
        required: true
        schema:
          $ref: '#/definitions/SSHKeyInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SSHKey'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - SSHKeys
      summary: Delete the ssh key
      description: Deletes the ssh key.
      operationId: deleteSSHKey
      parameters:
      - name: id
        in: path
        description: ssh key UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /storage/{id}/attachments:
    get:
      tags:
      - Volumes
      summary: Retrieve all volume attachment
      description: Returns a list of the current volume’s attachments.
      operationId: findVolumeAttachments
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VolumeAttachmentList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Volumes
      summary: Attach your volume
      description: Attach your volume to a device.
      operationId: createVolumeAttachment
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: attachment
        description: Device to attach
        required: true
        schema:
          $ref: '#/definitions/VolumeAttachmentInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/VolumeAttachment'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /storage/attachments/{id}:
    get:
      tags:
      - Volumes
      summary: Retrieve an attachment
      description: Returns a single attachment if the user has access
      operationId: findVolumeAttachmentById
      parameters:
      - name: id
        in: path
        description: Attachment UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VolumeAttachment'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    delete:
      tags:
      - Volumes
      summary: Detach volume
      description: Detach volume.
      operationId: deleteVolumeAttachment
      parameters:
      - name: id
        in: path
        description: Attachment UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /storage/{id}/snapshots:
    get:
      tags:
      - Volumes
      summary: Retrieve all volume snapshot
      description: Returns a list of the current volume’s snapshots. To create Volume Snapshots, please check the Volume Snapshot Policies feature.
      operationId: findVolumeSnapshots
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VolumeSnapshotList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /storage/{volume_id}/snapshots/{id}:
    delete:
      tags:
      - Volumes
      summary: Delete volume snapshot
      description: Delete volume snapshot.
      operationId: deleteVolumeSnapshot
      parameters:
      - name: volume_id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - name: id
        in: path
        description: Snapshot UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /storage/{id}/snapshot-policies:
    post:
      tags:
      - Volumes
      summary: Create a volume snapshot policy
      description: Creates a new snapshot policy of your volume.
      operationId: createVolumeSnapshotPolicy
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - name: snapshot_count
        in: query
        description: Snapshot count
        required: false
        type: integer
      - name: snapshot_frequency
        in: query
        description: Snapshot frequency
        required: true
        type: string
        enum:
        - 1min
        - 15min
        - 1hour
        - 1day
        - 1week
        - 1month
        - 1year
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/SnapshotPolicy'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /storage/snapshot-policies/{id}:
    put:
      tags:
      - Volumes
      summary: Update the volume snapshot policy
      description: Updates the volume snapshot policy.
      operationId: updateVolumeSnapshotPolicy
      parameters:
      - name: id
        in: path
        description: Snapshot Policy UUID
        required: true
        type: string
        format: uuid
      - name: snapshot_count
        in: query
        description: Snapshot count
        required: false
        type: integer
      - name: snapshot_frequency
        in: query
        description: Snapshot frequency
        required: true
        type: string
        enum:
        - 1min
        - 15min
        - 1hour
        - 1day
        - 1week
        - 1month
        - 1year
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/SnapshotPolicy'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Volumes
      summary: Delete the volume snapshot policy
      description: Deletes the volume snapshot policy.
      operationId: deleteVolumeSnapshotPolicy
      parameters:
      - name: id
        in: path
        description: Snapshot Policy UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /projects/{id}/storage:
    get:
      tags:
      - Volumes
      summary: Retrieve all volumes
      description: Returns a list of the current projects’s volumes.
      operationId: findVolumes
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VolumeList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Volumes
      summary: Create a volume
      description: |-
        Creates a new volume in our datacenter. The valid attribute values for `plan` and `facility` are:

                 "facility": "ams1", "ewr1", "nrt1", "sjc1"
                 "plan": "storage_1" (Standard), "storage_2" (Performance)
      operationId: createVolume
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: volume
        description: Volume to create
        required: true
        schema:
          $ref: '#/definitions/VolumeCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Volume'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /storage/{id}:
    get:
      tags:
      - Volumes
      summary: Retrieve a volume
      description: Returns a single volume if the user has access
      operationId: findVolumeById
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Volume'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - Volumes
      summary: Update the volume
      description: Updates the volume.
      operationId: updateVolume
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: volume
        description: Volume to update
        required: true
        schema:
          $ref: '#/definitions/VolumeUpdateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Volume'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - Volumes
      summary: Delete the volume
      description: Deletes the volume.
      operationId: deleteVolume
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /storage/{id}/restore:
    post:
      tags:
      - Volumes
      summary: Restore volume
      description: Restore the volume to the given snapshot.
      operationId: restoreVolume
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - name: restore_point
        in: query
        description: restore point
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/Volume'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /storage/{id}/clone:
    post:
      tags:
      - Volumes
      summary: Clone volume/snapshot
      description: Clone your volume or snapshot into a new volume. To clone the volume, send an empty body. To promote a volume snapshot into a new volume, include the snapshot_timestamp attribute in the request body.
      operationId: cloneVolume
      parameters:
      - name: id
        in: path
        description: Volume UUID
        required: true
        type: string
        format: uuid
      - name: snapshot_timestamp
        in: query
        description: snapshot timestamp
        required: false
        type: string
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/Volume'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /user/otp/app:
    post:
      tags:
      - TwoFactorAuth
      summary: Enable two factor auth using app
      description: Enables two factor authentication using authenticator app.
      operationId: enableTfaApp
      parameters: []
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
    delete:
      tags:
      - TwoFactorAuth
      summary: Disable two factor authentication
      description: Disables two factor authentication.
      operationId: disableTfaApp
      parameters: []
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "404":
          description: not found
  /user/otp/sms:
    post:
      tags:
      - TwoFactorAuth
      summary: Enable two factor auth using sms
      description: Enables two factor authentication with sms.
      operationId: enableTfaSms
      parameters: []
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
    delete:
      tags:
      - TwoFactorAuth
      summary: Disable two factor authentication
      description: Disables two factor authentication.
      operationId: disableTfaSms
      parameters: []
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "404":
          description: not found
  /devices/{id}/traffic:
    get:
      tags:
      - Devices
      summary: Retrieve device traffic
      description: Returns traffic for a specific device.
      operationId: findTraffic
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - name: direction
        in: query
        description: Traffic direction
        required: true
        type: string
        enum:
        - inbound
        - outbound
      - in: body
        name: timeframe
        description: Traffic timeframe
        required: true
        schema:
          $ref: '#/definitions/Timeframe'
      - name: interval
        in: query
        description: Traffic interval
        required: false
        type: string
        enum:
        - minute
        - hour
        - day
        - week
        - month
        - year
        - hour_of_day
        - day_of_week
        - day_of_month
        - month_of_year
      - name: bucket
        in: query
        description: Traffic bucket
        required: false
        type: string
        enum:
        - internal
        - external
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /organizations/{id}/transfers:
    get:
      tags:
      - Organizations
      - TransferRequests
      summary: Retrieve all project transfer requests from or to an organization
      description: Provides a collection of project transfer requests from or to the organization.
      operationId: findOrganizationTransfers
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/TransferRequestList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
  /projects/{id}/transfers:
    post:
      tags:
      - Projects
      - TransferRequests
      summary: Create a transfer request
      description: Organization owners can transfer their projects to other organizations.
      operationId: createTransferRequest
      parameters:
      - name: id
        in: path
        description: UUID of the project to be transferred
        required: true
        type: string
        format: uuid
      - in: body
        name: transfer_request
        description: Transfer Request to create
        required: true
        schema:
          $ref: '#/definitions/TransferRequestInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/TransferRequest'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /transfers/{id}:
    get:
      tags:
      - TransferRequests
      summary: View a transfer request
      description: Returns a single transfer request.
      operationId: findTransferRequestById
      parameters:
      - name: id
        in: path
        description: Transfer request UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/TransferRequest'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    put:
      tags:
      - TransferRequests
      summary: Accept a transfer request
      description: Accept a transfer request.
      operationId: acceptTransferRequest
      parameters:
      - name: id
        in: path
        description: Transfer request UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    delete:
      tags:
      - TransferRequests
      summary: Decline a transfer request
      description: Decline a transfer request.
      operationId: declineTransferRequest
      parameters:
      - name: id
        in: path
        description: Transfer request UUID
        required: true
        type: string
        format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /devices/{id}/usages:
    get:
      tags:
      - Devices
      - Usages
      summary: Retrieve all usages for device
      description: Returns all usages for a device.
      operationId: findDeviceUsages
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        type: string
        format: uuid
      - name: created[after]
        in: query
        description: Filter usages created after this date
        required: false
        type: string
        format: datetime
      - name: created[before]
        in: query
        description: Filter usages created before this date
        required: false
        type: string
        format: datetime
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/DeviceUsageList'
        "401":
          description: unauthorized
        "404":
          description: not found
  /projects/{id}/usages:
    get:
      tags:
      - Devices
      - Usages
      summary: Retrieve all usages for project
      description: Returns all usages for a project.
      operationId: findProjectUsage
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: created[after]
        in: query
        description: Filter usages created after this date
        required: false
        type: string
        format: datetime
      - name: created[before]
        in: query
        description: Filter usages created before this date
        required: false
        type: string
        format: datetime
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/ProjectUsageList'
        "401":
          description: unauthorized
        "404":
          description: not found
  /userdata/validate:
    post:
      tags:
      - Userdata
      summary: Validate user data
      description: Validates user data (Userdata)
      operationId: validateUserdata
      parameters:
      - name: userdata
        in: query
        description: Userdata to validate
        required: false
        type: string
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /users:
    get:
      tags:
      - Users
      summary: Retrieve all users
      description: Returns a list of users that the are accessible to the current user (all users in the current user’s projects, essentially).
      operationId: findUsers
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      - name: page
        in: query
        description: page to display, default to 1, max 100_000
        required: false
        type: integer
      - name: per_page
        in: query
        description: items per page, default to 10, max 1_000
        required: false
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/UserList'
        "401":
          description: unauthorized
  /users/{id}:
    get:
      tags:
      - Users
      summary: Retrieve a user
      description: Returns a single user if the user has access
      operationId: findUserById
      parameters:
      - name: id
        in: path
        description: User UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/User'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
  /user:
    get:
      tags:
      - Users
      summary: Retrieve the current user
      description: Returns the user object for the currently logged-in user.
      operationId: findCurrentUser
      parameters:
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/User'
        "401":
          description: unauthorized
    put:
      tags:
      - Users
      summary: Update the current user
      description: Updates the currently logged-in user.
      operationId: updateCurrentUser
      parameters:
      - in: body
        name: user
        description: User to update
        required: true
        schema:
          $ref: '#/definitions/UserUpdateInput'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/User'
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
  /verify-email:
    post:
      tags:
      - UserVerificationTokens
      summary: Create an email verification request
      description: Creates an email verification request
      operationId: createValidationRequest
      parameters:
      - name: login
        in: query
        description: Email for verification request
        required: true
        type: string
      responses:
        "201":
          description: created
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
    put:
      tags:
      - UserVerificationTokens
      summary: Verify a user using an email verification token
      description: Consumes an email verification token and verifies the user associated with it.
      operationId: consumeVerificationRequest
      parameters:
      - name: token
        in: query
        description: User verification token
        required: true
        type: string
      responses:
        "200":
          description: ok
  /projects/{id}/virtual-networks:
    get:
      tags:
      - Projects
      - VLANs
      summary: Retrieve all virtual networks
      description: Provides a list of virtual networks for a single project.
      operationId: findVirtualNetworks
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - name: include
        in: query
        description: related attributes to include
        required: false
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VirtualNetworkList'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
    post:
      tags:
      - Projects
      - VLANs
      summary: Create an virtual network
      description: Creates an virtual network.
      operationId: createVirtualNetwork
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        type: string
        format: uuid
      - in: body
        name: virtual_network
        description: Virtual Network to create
        required: true
        schema:
          $ref: '#/definitions/VirtualNetworkCreateInput'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/VirtualNetwork'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /virtual-networks/{id}:
    get:
      tags:
      - VLANs
      summary: Get a virtual network
      description: Get a virtual network.
      operationId: getVirtualNetwork
      parameters:
      - name: id
        in: path
        description: Virtual Network UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VirtualNetwork'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
    delete:
      tags:
      - VLANs
      summary: Delete a virtual network
      description: Deletes a virtual network.
      operationId: deleteVirtualNetwork
      parameters:
      - name: id
        in: path
        description: Virtual Network UUID
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VirtualNetwork'
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "422":
          description: unprocessable entity
  /user/vpn:
    get:
      tags:
      - VPN
      summary: Retrieve the client vpn config for current user
      description: Returns the client vpn config for the currently logged-in user.
      operationId: findCurrentUserVpnConfig
      parameters:
      - name: code
        in: query
        description: Facility code
        required: true
        type: string
        enum:
        - ewr1
        - scj1
        - arm1
        - nrt1
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/VPNConfig'
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
    post:
      tags:
      - VPN
      summary: Turn on vpn for the current user
      description: Turns on vpn for the currently logged-in user.
      operationId: turnOnCurrentUserVpn
      parameters: []
      responses:
        "201":
          description: created
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
    delete:
      tags:
      - VPN
      summary: Turn off vpn for the current user
      description: Turns off vpn for the currently logged-in user.
      operationId: turnOffCurrentUserVpn
      parameters: []
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
        "422":
          description: unprocessable entity
securityDefinitions:
  x_auth_token:
    type: apiKey
    name: X-Auth-Token
    in: header
definitions:
  Address:
    required:
    - address
    - country
    - zip_code
    properties:
      address:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      zip_code:
        type: string
      country:
        type: string
      coordinates:
        $ref: '#/definitions/Coordinates'
  Coordinates:
    properties:
      latitude:
        type: string
      longitude:
        type: string
  Batch:
    properties:
      id:
        type: string
        format: uuid
      error_messages:
        type: array
        items:
          type: string
      quantity:
        type: integer
      state:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      devices:
        type: array
        items:
          $ref: '#/definitions/Href'
      project:
        $ref: '#/definitions/Href'
  BatchesList:
    properties:
      batches:
        type: array
        items:
          $ref: '#/definitions/Batch'
  InstancesBatchCreateInput:
    properties:
      batches:
        type: array
        items:
          $ref: '#/definitions/InstancesBatchCreateInput_batches'
  Email:
    properties:
      id:
        type: string
        format: uuid
      address:
        type: string
      default:
        type: boolean
      verified:
        type: boolean
      href:
        type: string
  CreateEmailInput:
    required:
    - address
    properties:
      address:
        type: string
  UpdateEmailInput:
    properties:
      default:
        type: boolean
  EmailInput:
    required:
    - address
    properties:
      address:
        type: string
      default:
        type: boolean
  Entitlement:
    required:
    - id
    - slug
    - weight
    properties:
      id:
        type: string
        format: uuid
      description:
        type: string
      slug:
        type: string
      name:
        type: string
      weight:
        type: integer
      instance_quota:
        type: object
        properties: {}
      project_quota:
        type: integer
      volume_quota:
        type: object
        properties: {}
      ip_quota:
        type: object
        properties: {}
      feature_access:
        type: object
        properties: {}
      href:
        type: string
      volume_limits:
        type: object
        properties: {}
  EntitlementInput:
    properties:
      description:
        type: string
      slug:
        type: string
      weight:
        type: integer
      instance_quota:
        type: object
        properties: {}
      project_quota:
        type: integer
      volume_quota:
        type: object
        properties: {}
      feature_access:
        type: object
        properties: {}
  EntitlementList:
    properties:
      entitlements:
        type: array
        items:
          $ref: '#/definitions/Entitlement'
      meta:
        $ref: '#/definitions/Meta'
  Event:
    properties:
      id:
        type: string
        format: uuid
      state:
        type: string
      type:
        type: string
      body:
        type: string
      relationships:
        type: array
        items:
          $ref: '#/definitions/Href'
      interpolated:
        type: string
      created_at:
        type: string
        format: date-time
      href:
        type: string
  EventInput:
    properties:
      type:
        type: string
      body:
        type: string
      state:
        type: string
      private:
        type: boolean
  EventList:
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/Event'
      meta:
        $ref: '#/definitions/Meta'
  EventTypeList:
    properties:
      event_types:
        type: array
        items:
          $ref: '#/definitions/EventType'
  EventType:
    properties:
      group:
        type: string
      events:
        type: array
        items:
          type: string
  Facility:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      code:
        type: string
      features:
        type: array
        items:
          type: string
      address:
        $ref: '#/definitions/Address'
  FacilityList:
    properties:
      facilities:
        type: array
        items:
          $ref: '#/definitions/Facility'
  HardwareLocation:
    properties:
      cage:
        type: string
      facility:
        type: string
      rack:
        type: string
      row:
        type: string
      switch:
        type: string
  HardwareReservation:
    properties:
      id:
        type: string
        format: uuid
      short_id:
        type: string
        format: string
      facility:
        $ref: '#/definitions/Facility'
      plan:
        $ref: '#/definitions/Plan'
      href:
        type: string
      project:
        $ref: '#/definitions/Project'
      device:
        $ref: '#/definitions/Device'
      created_at:
        type: string
        format: date-time
      remove_at:
        type: string
        format: date-time
  HardwareReservationList:
    properties:
      hardware_reservations:
        type: array
        items:
          $ref: '#/definitions/HardwareReservation'
      meta:
        $ref: '#/definitions/Meta'
  Device:
    properties:
      id:
        type: string
        format: uuid
      short_id:
        type: string
      hostname:
        type: string
      description:
        type: string
      state:
        type: string
      tags:
        type: array
        items:
          type: string
      image_url:
        type: string
      billing_cycle:
        type: string
      user:
        type: string
      iqn:
        type: string
      locked:
        type: boolean
      bonding_mode:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      spot_instance:
        type: boolean
      spot_price_max:
        type: number
        format: float
      termination_time:
        type: string
        format: date-time
      customdata:
        type: string
      provisioning_percentage:
        type: number
        format: float
      operating_system:
        $ref: '#/definitions/OperatingSystem'
      always_pxe:
        type: boolean
      ipxe_script_url:
        type: string
      location:
        $ref: '#/definitions/HardwareLocation'
      facility:
        $ref: '#/definitions/Facility'
      plan:
        $ref: '#/definitions/Plan'
      userdata:
        type: string
      root_password:
        type: string
      href:
        type: string
      project:
        description: Full version of project object when included
        $ref: '#/definitions/Href'
      project_lite:
        description: Lite version of project object when included
        $ref: '#/definitions/Href'
      volumes:
        type: array
        items:
          $ref: '#/definitions/Href'
      hardware_reservation:
        $ref: '#/definitions/Href'
      ssh_keys:
        type: array
        items:
          $ref: '#/definitions/Href'
      ip_addresses:
        type: array
        items:
          $ref: '#/definitions/IPAssignment'
      provisioning_events:
        type: array
        items:
          $ref: '#/definitions/Event'
  DeviceCreateInput:
    required:
    - facility
    - operating_system
    - plan
    properties:
      facility:
        type: string
      plan:
        type: string
      hostname:
        type: string
      description:
        type: string
      billing_cycle:
        type: string
      operating_system:
        type: string
      always_pxe:
        type: boolean
      ipxe_script_url:
        type: string
      userdata:
        type: string
      locked:
        type: boolean
      customdata:
        type: string
      hardware_reservation_id:
        type: string
        format: uuid
        example: uuid or 'next-available'
      spot_instance:
        type: boolean
      spot_price_max:
        type: number
        format: float
      termination_time:
        type: string
        format: date-time
      tags:
        type: array
        items:
          type: string
      project_ssh_keys:
        type: array
        items:
          type: string
          format: uuid
      user_ssh_keys:
        type: array
        items:
          type: string
          format: uuid
      features:
        type: array
        items:
          type: string
      public_ipv4_subnet_size:
        type: number
        format: integer
      private_ipv4_subnet_size:
        type: number
        format: integer
      ip_addresses:
        type: array
        items:
          $ref: '#/definitions/InstancesBatchCreateInput_ip_addresses'
  IpAddressInput:
    properties:
      address_family:
        type: number
        format: integer
        example: 4 or 6
        description: Address Family for IP Address
  DeviceUpdateInput:
    properties:
      hostname:
        type: string
      description:
        type: string
      billing_cycle:
        type: string
      userdata:
        type: string
      locked:
        type: boolean
      tags:
        type: array
        items:
          type: string
      always_pxe:
        type: boolean
      ipxe_script_url:
        type: string
      spot_instance:
        type: boolean
      customdata:
        type: string
  DeviceList:
    properties:
      devices:
        type: array
        items:
          $ref: '#/definitions/Device'
      meta:
        $ref: '#/definitions/Meta'
  Interconnection:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      contact_email:
        type: string
      status:
        type: string
      type:
        type: string
      redundancy:
        type: string
      speed:
        type: integer
        description: The connection's speed in bps.
      tags:
        type: array
        items:
          type: string
      ports:
        type: array
        items:
          $ref: '#/definitions/InterconnectionPort'
      facility:
        $ref: '#/definitions/Href'
      organization:
        $ref: '#/definitions/Href'
  InterconnectionList:
    properties:
      interconnections:
        type: array
        items:
          $ref: '#/definitions/Interconnection'
  InterconnectionCreateInput:
    required:
    - facility
    - name
    - redundancy
    - type
    properties:
      name:
        type: string
      description:
        type: string
      facility:
        type: string
        description: A Facility ID or code.
      type:
        type: string
        description: Either 'shared' or 'dedicated'.
      redundancy:
        type: string
        description: Either 'primary' or 'redundant'.
      contact_email:
        type: string
      project:
        type: string
      speed:
        type: string
        description: 'A connection speed, in bps, mbps, or gbps. Ex: ''100000000'' or ''100 mbps''.'
      tags:
        type: array
        items:
          type: string
  InterconnectionUpdateInput:
    properties:
      name:
        type: string
      redundancy:
        type: string
        description: Updating from 'redundant' to 'primary' will remove a secondary port, while updating from 'primary' to 'redundant' will add one.
      description:
        type: string
      contact_email:
        type: string
      tags:
        type: array
        items:
          type: string
  InterconnectionPort:
    properties:
      id:
        type: string
        format: uuid
      role:
        type: string
        description: Either 'primary' or 'secondary'.
      status:
        type: string
      switch_id:
        type: string
        description: A switch 'short ID'
      virtual_circuits:
        $ref: '#/definitions/VirtualCircuitList'
      organization:
        $ref: '#/definitions/Href'
  InterconnectionPortList:
    properties:
      ports:
        type: array
        items:
          $ref: '#/definitions/InterconnectionPort'
  VirtualCircuit:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      status:
        type: string
      vnid:
        type: integer
      nni_vlan:
        type: integer
      speed:
        type: integer
        description: integer representing bps speed
      tags:
        type: array
        items:
          type: string
      project:
        $ref: '#/definitions/Href'
      virtual_network:
        $ref: '#/definitions/Href'
  VirtualCircuitList:
    properties:
      virtual_circuits:
        type: array
        items:
          $ref: '#/definitions/VirtualCircuit'
  VirtualCircuitCreateInput:
    properties:
      description:
        type: string
      name:
        type: string
      speed:
        type: integer
        description: speed can be passed as integer number representing bps speed or string (e.g. '52m' or '100g' or '4 gbps')
      tags:
        type: array
        items:
          type: string
      vnid:
        type: string
        format: uuid
        description: A Virtual Network record UUID or the VNID of a Virtual Network in your project (sent as integer).
      nni_vlan:
        type: integer
        minimum: 2
        maximum: 4094
      project:
        type: string
        format: uuid
  VirtualCircuitUpdateInput:
    properties:
      description:
        type: string
      name:
        type: string
      speed:
        type: string
      tags:
        type: array
        items:
          type: string
      vnid:
        type: string
        description: A Virtual Network record UUID or the VNID of a Virtual Network in your project.
  Invitation:
    properties:
      id:
        type: string
        format: uuid
      roles:
        type: array
        items:
          type: string
      invitee:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      invited_by:
        $ref: '#/definitions/Href'
      organization:
        $ref: '#/definitions/Href'
      projects_ids:
        type: array
        items:
          type: string
      invitation:
        $ref: '#/definitions/Href'
      href:
        type: string
  InvitationList:
    properties:
      invitations:
        type: array
        items:
          $ref: '#/definitions/Membership'
  InvitationInput:
    required:
    - invitee
    properties:
      invitee:
        type: string
      message:
        type: string
      roles:
        type: array
        items:
          type: string
      projects_ids:
        type: array
        items:
          type: string
  License:
    properties:
      id:
        type: string
        format: uuid
      description:
        type: string
      license_key:
        type: string
      licensee_product:
        $ref: '#/definitions/Href'
      size:
        type: number
      project:
        $ref: '#/definitions/Href'
  LicenseCreateInput:
    properties:
      description:
        type: string
      size:
        type: number
      licensee_product_id:
        type: string
  LicenseUpdateInput:
    properties:
      description:
        type: string
      size:
        type: number
  LicenseList:
    properties:
      licenses:
        type: array
        items:
          $ref: '#/definitions/License'
  Membership:
    properties:
      id:
        type: string
        format: uuid
      roles:
        type: array
        items:
          type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      project:
        $ref: '#/definitions/Href'
      user:
        $ref: '#/definitions/Href'
      href:
        type: string
  MembershipList:
    properties:
      memberships:
        type: array
        items:
          $ref: '#/definitions/Membership'
  MembershipInput:
    properties:
      role:
        type: array
        items:
          type: string
  BgpConfigRequestInput:
    required:
    - asn
    - deployment_type
    properties:
      deployment_type:
        type: string
      asn:
        type: integer
      md5:
        type: string
      use_case:
        type: string
  BgpConfig:
    properties:
      id:
        type: string
        format: uuid
      status:
        type: string
        description: status requested is valid only for global deployment
        enum:
        - requested
        - enabled
        - disabled
      deployment_type:
        type: string
        description: |
          In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space.
        enum:
        - global
        - local
      asn:
        type: integer
        description: Autonomous System Number
      route_object:
        type: string
        description: Specifies AS-MACRO (aka AS-SET) to use when building client route filters
      md5:
        type: string
        description: (Optional) Password for BGP session in plaintext (not a checksum)
      max_prefix:
        type: integer
        description: The maximum number of route filters allowed per server
      project:
        $ref: '#/definitions/Href'
      created_at:
        type: string
        format: date-time
      requested_at:
        type: string
        format: date-time
      sessions:
        type: array
        description: The direct connections between neighboring routers that want to exchange routing information.
        items:
          $ref: '#/definitions/BgpSession'
      ranges:
        type: array
        description: The IP block ranges associated to the ASN (Populated in Global BGP only)
        items:
          $ref: '#/definitions/GlobalBgpRange'
      href:
        type: string
  BgpSessionNeighbors:
    properties:
      bgp_neighbors:
        type: array
        description: A list of BGP session neighbor data
        items:
          $ref: '#/definitions/BgpNeighborData'
  BgpNeighborData:
    properties:
      address_family:
        type: number
        format: integer
        example: 4 or 6
        description: Address Family for IP Address
      customer_as:
        type: number
        format: integer
        example: 65000.0
        description: The customer's ASN. In a local BGP deployment, this will be an internal ASN used to route within the data center. For a global BGP deployment, this will be the your own ASN, configured when you set up BGP for your project.
      customer_ip:
        type: string
        example: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
        description: The device's IP address. For an IPv4 BGP session, this is typically the private bond0 address for the device.
      md5_enabled:
        type: boolean
        description: True if an MD5 password is configured for the project.
      md5_password:
        type: string
        description: The MD5 password configured for the project, if set.
      multihop:
        type: boolean
        description: True when the BGP session should be configured as multihop.
      peer_as:
        type: number
        format: integer
        example: 65530.0
        description: The Peer ASN to use when configuring BGP on your device.
      peer_ips:
        type: array
        example: '["10.32.16.0"] or ["169.254.255.1", "169.254.255.2"]'
        description: A list of one or more IP addresses to use for the Peer IP section of your BGP configuration. For non-multihop sessions, this will typically be a single gateway address for the device. For multihop sessions, it will be a list of IPs.
      routes_in:
        type: array
        description: A list of project subnets
        items:
          $ref: '#/definitions/BgpNeighborData_routes_in'
      routes_out:
        type: array
        description: A list of outgoing routes. Only populated if the BGP session has default route enabled.
        items:
          $ref: '#/definitions/BgpNeighborData_routes_out'
  BgpSession:
    properties:
      id:
        type: string
        format: uuid
      status:
        type: string
      learned_routes:
        type: array
        items:
          type: string
      address_family:
        type: string
      device:
        $ref: '#/definitions/Href'
      href:
        type: string
      default_route:
        type: boolean
  BGPSessionInput:
    properties:
      address_family:
        type: string
      default_route:
        type: boolean
  BgpSessionList:
    properties:
      bgp_sessions:
        type: array
        items:
          $ref: '#/definitions/BgpSession'
  GlobalBgpRange:
    properties:
      id:
        type: string
        format: uuid
      address_family:
        type: integer
      range:
        type: string
      href:
        type: string
  GlobalBgpRangeList:
    properties:
      global_bgp_ranges:
        type: array
        items:
          $ref: '#/definitions/GlobalBgpRange'
  InternetGateway:
    properties:
      id:
        type: string
        format: uuid
      created_at:
        type: string
        format: date-time
      virtual_network:
        $ref: '#/definitions/Href'
      created_by:
        type: string
      ip_reservations:
        type: array
        items:
          $ref: '#/definitions/Href'
      href:
        type: string
  IPAssignment:
    properties:
      id:
        type: string
        format: uuid
      address_family:
        type: integer
      netmask:
        type: string
      public:
        type: boolean
      enabled:
        type: boolean
      cidr:
        type: integer
      management:
        type: boolean
      manageable:
        type: boolean
      assigned_to:
        $ref: '#/definitions/Href'
      network:
        type: string
      address:
        type: string
      gateway:
        type: string
      href:
        type: string
      created_at:
        type: string
        format: date-time
      parent_block:
        $ref: '#/definitions/ParentBlock'
  ParentBlock:
    properties:
      network:
        type: string
      netmask:
        type: string
      cidr:
        type: integer
      href:
        type: string
  IPReservation:
    properties:
      id:
        type: string
        format: uuid
      address_family:
        type: integer
      netmask:
        type: string
      public:
        type: boolean
      enabled:
        type: boolean
      cidr:
        type: integer
      management:
        type: boolean
      manageable:
        type: boolean
      addon:
        type: boolean
      bill:
        type: boolean
      assignments:
        type: array
        items:
          $ref: '#/definitions/IPAssignment'
      network:
        type: string
      created_at:
        type: string
        format: date-time
      facility:
        $ref: '#/definitions/Facility'
      href:
        type: string
      tags:
        type: array
        items:
          type: string
      state:
        type: string
  IPAssignmentInput:
    required:
    - address
    properties:
      address:
        type: string
      manageable:
        type: boolean
      customdata:
        type: string
  IPAssignmentList:
    properties:
      ip_addresses:
        type: array
        items:
          $ref: '#/definitions/IPAssignment'
  IPReservationList:
    properties:
      ip_addresses:
        type: array
        items:
          $ref: '#/definitions/IPReservation'
  IPAvailabilitiesList:
    properties:
      available:
        type: array
        items:
          type: string
  IPReservationRequestInput:
    required:
    - quantity
    - type
    properties:
      type:
        type: string
      quantity:
        type: integer
      comments:
        type: string
      facility:
        type: string
      customdata:
        type: string
      tags:
        type: array
        items:
          type: string
      details:
        type: string
      fail_on_approval_required:
        type: boolean
  VirtualNetwork:
    properties:
      id:
        type: string
        format: uuid
      description:
        type: string
        format: uuid
      vxlan:
        type: integer
      facility:
        $ref: '#/definitions/Href'
      instances:
        type: array
        items:
          $ref: '#/definitions/Href'
      assigned_to:
        $ref: '#/definitions/Href'
      href:
        type: string
  VirtualNetworkCreateInput:
    properties:
      project_id:
        type: string
        format: uuid
      description:
        type: string
      facility:
        type: string
      vxlan:
        type: integer
      vlan:
        type: integer
  VirtualNetworkList:
    properties:
      virtual_networks:
        type: array
        items:
          $ref: '#/definitions/VirtualNetwork'
  OperatingSystem:
    properties:
      id:
        type: string
        format: uuid
      slug:
        type: string
      name:
        type: string
      distro:
        type: string
      version:
        type: string
      provisionable_on:
        type: array
        items:
          type: string
  OperatingSystemList:
    type: array
    items:
      $ref: '#/definitions/OperatingSystem'
  Organization:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      website:
        type: string
      twitter:
        type: string
      logo:
        type: string
        format: binary
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      projects:
        type: array
        items:
          $ref: '#/definitions/Href'
      members:
        type: array
        items:
          $ref: '#/definitions/Href'
      memberships:
        type: array
        items:
          $ref: '#/definitions/Href'
      address:
        $ref: '#/definitions/Address'
      billing_address:
        $ref: '#/definitions/Address'
      entitlement:
        $ref: '#/definitions/Entitlement'
      terms:
        type: integer
      credit_amount:
        type: number
        format: float
      customdata:
        type: string
      enforce_2fa_at:
        type: string
        format: date-time
        description: Force to all members to have enabled the two factor authentication after that date, unless the value is null
  OrganizationInput:
    properties:
      name:
        type: string
      description:
        type: string
      website:
        type: string
      twitter:
        type: string
      logo:
        type: string
        format: binary
      address:
        $ref: '#/definitions/Address'
      billing_address:
        $ref: '#/definitions/Address'
      customdata:
        type: string
      enforce_2fa_at:
        type: string
        format: date-time
        description: Force to all members to have enabled the two factor authentication after that date, unless the value is null
  OrganizationList:
    properties:
      organizations:
        type: array
        items:
          $ref: '#/definitions/Organization'
      meta:
        $ref: '#/definitions/Meta'
  PaymentMethod:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      type:
        type: string
      default:
        type: boolean
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      card_type:
        type: string
      expiration_month:
        type: string
      expiration_year:
        type: string
      cardholder_name:
        type: string
      billing_address:
        $ref: '#/definitions/PaymentMethodBillingAddress'
      email:
        type: string
      created_by_user:
        $ref: '#/definitions/Href'
      organization:
        $ref: '#/definitions/Href'
      projects:
        type: array
        items:
          $ref: '#/definitions/Href'
  PaymentMethodBillingAddress:
    properties:
      street_address:
        type: string
      postal_code:
        type: string
      country_code_alpha2:
        type: string
  PaymentMethodCreateInput:
    required:
    - name
    - nonce
    properties:
      name:
        type: string
      nonce:
        type: string
      default:
        type: boolean
  PaymentMethodUpdateInput:
    properties:
      name:
        type: string
      default:
        type: boolean
      cardholder_name:
        type: string
      expiration_month:
        type: string
      expiration_year:
        type: integer
      billing_address:
        type: object
        properties: {}
  PaymentMethodList:
    properties:
      payment_methods:
        type: array
        items:
          $ref: '#/definitions/PaymentMethod'
  Plan:
    properties:
      id:
        type: string
        format: uuid
      slug:
        type: string
      name:
        type: string
      description:
        type: string
      line:
        type: string
      specs:
        type: object
        properties: {}
      pricing:
        type: object
        properties: {}
      legacy:
        type: boolean
      class:
        type: string
      available_in:
        type: array
        items:
          $ref: '#/definitions/Href'
  PlanList:
    properties:
      plans:
        type: array
        items:
          $ref: '#/definitions/Plan'
  PlanVersion:
    properties:
      id:
        type: string
        format: uuid
      slug:
        type: string
      name:
        type: string
      specs:
        type: object
        properties: {}
      line:
        type: string
  Port:
    properties:
      id:
        type: string
        format: uuid
      type:
        type: string
      name:
        type: string
      data:
        type: object
        properties: {}
      hardware:
        $ref: '#/definitions/Href'
      virtual_networks:
        type: array
        items:
          $ref: '#/definitions/Href'
      connected_port:
        $ref: '#/definitions/Href'
      href:
        type: string
  PortAssignInput:
    properties:
      vnid:
        type: string
  PortConvertLayer3Input:
    properties:
      request_ips:
        type: array
        items:
          $ref: '#/definitions/PortConvertLayer3Input_request_ips'
  Project:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      max_devices:
        type: object
        properties: {}
      members:
        type: array
        items:
          $ref: '#/definitions/Href'
      memberships:
        type: array
        items:
          $ref: '#/definitions/Href'
      network_status:
        type: object
        properties: {}
      invitations:
        type: array
        items:
          $ref: '#/definitions/Href'
      payment_method:
        $ref: '#/definitions/Href'
      devices:
        type: array
        items:
          $ref: '#/definitions/Href'
      ssh_keys:
        type: array
        items:
          $ref: '#/definitions/Href'
      volumes:
        type: array
        items:
          $ref: '#/definitions/Href'
      bgp_config:
        $ref: '#/definitions/Href'
      customdata:
        type: string
  ProjectCreateInput:
    required:
    - name
    properties:
      name:
        type: string
      payment_method_id:
        type: string
        format: uuid
      customdata:
        type: string
  ProjectCreateFromRootInput:
    required:
    - name
    properties:
      name:
        type: string
      organization_id:
        type: string
        format: uuid
      payment_method_id:
        type: string
        format: uuid
      customdata:
        type: string
  ProjectUpdateInput:
    properties:
      name:
        type: string
      payment_method_id:
        type: string
        format: uuid
      backend_transfer_enabled:
        type: boolean
      customdata:
        type: string
  ProjectList:
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'
      meta:
        $ref: '#/definitions/Meta'
  Region:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      facility:
        $ref: '#/definitions/Facility'
  RegionsList:
    properties:
      regions:
        type: array
        items:
          $ref: '#/definitions/Region'
  SpotMarketRequest:
    properties:
      id:
        type: string
        format: uuid
      devices_min:
        type: integer
      devices_max:
        type: integer
      max_bid_price:
        type: number
        format: float
      created_at:
        type: string
        format: date-time
      end_at:
        type: string
        format: date-time
      href:
        type: string
      facilities:
        $ref: '#/definitions/Href'
      project:
        $ref: '#/definitions/Href'
      instances:
        $ref: '#/definitions/Href'
  SpotMarketRequestList:
    properties:
      spot_market_requests:
        type: array
        items:
          $ref: '#/definitions/SpotMarketRequest'
  SpotMarketRequestCreateInput:
    properties:
      instance_attributes:
        $ref: '#/definitions/SpotMarketRequestCreateInput_instance_attributes'
      devices_min:
        type: integer
      devices_max:
        type: integer
      max_bid_price:
        type: number
        format: float
      end_at:
        type: string
        format: date-time
      facilities:
        type: array
        items:
          type: string
          format: uuid
  SSHKey:
    properties:
      id:
        type: string
        format: uuid
      label:
        type: string
      key:
        type: string
      fingerprint:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      entity:
        $ref: '#/definitions/Href'
      href:
        type: string
  SSHKeyInput:
    properties:
      label:
        type: string
      key:
        type: string
  SSHKeyList:
    properties:
      ssh_keys:
        type: array
        items:
          $ref: '#/definitions/SSHKey'
  VolumeAttachment:
    properties:
      id:
        type: string
        format: uuid
      created_at:
        type: string
        format: date-time
      volume:
        $ref: '#/definitions/Href'
      device:
        $ref: '#/definitions/Href'
      href:
        type: string
  VolumeAttachmentInput:
    required:
    - device_id
    properties:
      device_id:
        type: string
        format: uuid
  VolumeAttachmentList:
    properties:
      attachments:
        type: array
        items:
          $ref: '#/definitions/VolumeAttachment'
  VolumeSnapshot:
    properties:
      id:
        type: string
        format: uuid
      status:
        type: string
      created_at:
        type: string
        format: date-time
      timestamp:
        type: string
        format: date-time
      volume:
        $ref: '#/definitions/Href'
  VolumeSnapshotInput:
    required:
    - device_id
    properties:
      device_id:
        type: string
        format: uuid
  VolumeSnapshotList:
    properties:
      snapshots:
        type: array
        items:
          $ref: '#/definitions/VolumeSnapshot'
  SnapshotPolicy:
    properties:
      id:
        type: string
        format: uuid
      snapshot_count:
        type: integer
        maximum: 256
        exclusiveMaximum: false
      snapshot_frequency:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      volume:
        $ref: '#/definitions/Href'
      href:
        type: string
  SnapshotPolicyInput:
    properties:
      snapshot_count:
        type: integer
      snapshot_frequency:
        type: string
  Volume:
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      size:
        type: integer
      locked:
        type: boolean
      billing_cycle:
        type: string
      state:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      project:
        $ref: '#/definitions/Href'
      facility:
        $ref: '#/definitions/Href'
      snapshot_policies:
        type: array
        items:
          $ref: '#/definitions/Href'
      attachments:
        type: array
        items:
          $ref: '#/definitions/Href'
      plan:
        $ref: '#/definitions/Plan'
      href:
        type: string
      customdata:
        type: string
  VolumeCreateInput:
    required:
    - facility
    - plan
    - size
    properties:
      description:
        type: string
      facility:
        type: string
        description: ams1, ewr1, nrt1, sjc1
      plan:
        type: string
        description: storage_1, storage_2
      size:
        type: integer
      locked:
        type: boolean
      billing_cycle:
        type: string
        description: hourly
      snapshot_policies:
        $ref: '#/definitions/SnapshotPolicyInput'
      customdata:
        type: string
  VolumeUpdateInput:
    properties:
      description:
        type: string
      size:
        type: integer
      locked:
        type: boolean
      billing_cycle:
        type: string
        description: hourly
      customdata:
        type: string
  VolumeList:
    properties:
      volumes:
        type: array
        items:
          $ref: '#/definitions/Volume'
      meta:
        $ref: '#/definitions/Meta'
  SubscribableEvent:
    properties:
      id:
        type: string
        format: uuid
      event_type:
        type: string
      event_name:
        type: string
      event_slug:
        type: string
  SubscribableEventsList:
    properties:
      subscribable_events:
        type: array
        items:
          $ref: '#/definitions/SubscribableEvent'
      meta:
        $ref: '#/definitions/Meta'
  SupportRequestInput:
    required:
    - message
    - subject
    properties:
      subject:
        type: string
      message:
        type: string
      project_id:
        type: string
      device_id:
        type: string
  Meta:
    properties:
      first:
        $ref: '#/definitions/Href'
      previous:
        $ref: '#/definitions/Href'
      self:
        $ref: '#/definitions/Href'
      next:
        $ref: '#/definitions/Href'
      last:
        $ref: '#/definitions/Href'
      total:
        type: integer
  Href:
    required:
    - href
    properties:
      href:
        type: string
  Timeframe:
    required:
    - ended_at
    - started_at
    properties:
      started_at:
        type: string
        format: date-time
      ended_at:
        type: string
        format: date-time
  CapacityList:
    properties:
      capacity:
        $ref: '#/definitions/CapacityReport'
  CapacityReport:
    properties:
      ams1:
        $ref: '#/definitions/CapacityPerFacility'
      atl1:
        $ref: '#/definitions/CapacityPerNewFacility'
      dfw1:
        $ref: '#/definitions/CapacityPerNewFacility'
      ewr1:
        $ref: '#/definitions/CapacityPerFacility'
      fra1:
        $ref: '#/definitions/CapacityPerNewFacility'
      iad1:
        $ref: '#/definitions/CapacityPerNewFacility'
      lax1:
        $ref: '#/definitions/CapacityPerNewFacility'
      nrt1:
        $ref: '#/definitions/CapacityPerFacility'
      ord1:
        $ref: '#/definitions/CapacityPerNewFacility'
      sea1:
        $ref: '#/definitions/CapacityPerNewFacility'
      sin1:
        $ref: '#/definitions/CapacityPerNewFacility'
      sjc1:
        $ref: '#/definitions/CapacityPerFacility'
      syd1:
        $ref: '#/definitions/CapacityPerNewFacility'
      yyz1:
        $ref: '#/definitions/CapacityPerNewFacility'
  CapacityPerFacility:
    properties:
      baremetal_2a:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
      baremetal_2a2:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
      baremetal_1:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
      baremetal_3:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
      c2.medium.x86:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
      baremetal_2:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
      m2.xlarge.x86:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
      baremetal_s:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
      baremetal_0:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
  CapacityPerNewFacility:
    properties:
      baremetal_1e:
        $ref: '#/definitions/CapacityLevelPerBaremetal'
  CapacityPerBaremetal:
    properties:
      level:
        type: string
      available_servers:
        type: integer
      total_servers:
        type: integer
      market_buffer_percentage:
        type: integer
      market_floor_price:
        type: number
        format: float
  CapacityLevelPerBaremetal:
    properties:
      level:
        type: string
  CapacityInput:
    properties:
      servers:
        type: array
        items:
          $ref: '#/definitions/ServerInfo'
  ServerInfo:
    properties:
      facility:
        type: string
      plan:
        type: string
      quantity:
        type: string
  CapacityServerUnavailable:
    properties:
      servers:
        type: array
        items:
          $ref: '#/definitions/ServerUnavailableInfo'
  ServerUnavailableInfo:
    properties:
      facility:
        type: string
      plan:
        type: string
      quantity:
        type: string
      available:
        type: boolean
  SpotMarketPricesList:
    properties:
      spot_market_prices:
        $ref: '#/definitions/SpotPricesReport'
  SpotPricesReport:
    properties:
      ams1:
        $ref: '#/definitions/SpotPricesPerFacility'
      atl1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      dfw1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      ewr1:
        $ref: '#/definitions/SpotPricesPerFacility'
      fra1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      iad1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      lax1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      nrt1:
        $ref: '#/definitions/SpotPricesPerFacility'
      ord1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      sea1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      sin1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      sjc1:
        $ref: '#/definitions/SpotPricesPerFacility'
      syd1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
      yyz1:
        $ref: '#/definitions/SpotPricesPerNewFacility'
  SpotPricesPerFacility:
    properties:
      baremetal_2a:
        $ref: '#/definitions/SpotPricesPerBaremetal'
      baremetal_2a2:
        $ref: '#/definitions/SpotPricesPerBaremetal'
      baremetal_1:
        $ref: '#/definitions/SpotPricesPerBaremetal'
      baremetal_3:
        $ref: '#/definitions/SpotPricesPerBaremetal'
      c2.medium.x86:
        $ref: '#/definitions/SpotPricesPerBaremetal'
      baremetal_2:
        $ref: '#/definitions/SpotPricesPerBaremetal'
      m2.xlarge.x86:
        $ref: '#/definitions/SpotPricesPerBaremetal'
      baremetal_s:
        $ref: '#/definitions/SpotPricesPerBaremetal'
      baremetal_0:
        $ref: '#/definitions/SpotPricesPerBaremetal'
  SpotPricesPerNewFacility:
    properties:
      baremetal_1e:
        $ref: '#/definitions/SpotPricesPerBaremetal'
  SpotPricesPerBaremetal:
    properties:
      price:
        type: number
        format: float
  SpotPricesHistoryReport:
    properties:
      prices_history:
        $ref: '#/definitions/SpotPricesDatapoints'
  SpotPricesDatapoints:
    properties:
      datapoints:
        type: array
        items:
          $ref: '#/definitions/SpotPricesDatapointsList'
  SpotPricesDatapointsList:
    type: array
    items:
      type: number
  NewPassword:
    properties:
      new_password:
        type: string
  RecoveryCodeList:
    properties:
      recovery_codes:
        type: array
        items:
          type: string
  Userdata:
    properties:
      userdata:
        type: string
  VPNConfig:
    properties:
      config:
        type: string
  TransferRequest:
    properties:
      id:
        type: string
        format: uuid
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      target_organization:
        $ref: '#/definitions/Href'
      project:
        $ref: '#/definitions/Href'
      href:
        type: string
  TransferRequestInput:
    properties:
      target_organization_id:
        type: string
        format: uuid
  TransferRequestList:
    properties:
      transfers:
        type: array
        items:
          $ref: '#/definitions/TransferRequest'
  DeviceUsage:
    properties:
      quantity:
        type: string
      unit:
        type: string
      total:
        type: string
  ProjectUsage:
    properties:
      facility:
        type: string
      type:
        type: string
      name:
        type: string
      plan:
        type: string
      plan_version:
        type: string
      quantity:
        type: string
      unit:
        type: string
      price:
        type: string
      total:
        type: string
  DeviceUsageList:
    properties:
      usages:
        type: array
        items:
          $ref: '#/definitions/DeviceUsage'
  ProjectUsageList:
    properties:
      usages:
        type: array
        items:
          $ref: '#/definitions/ProjectUsage'
  User:
    properties:
      id:
        type: string
        format: uuid
      short_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      full_name:
        type: string
      email:
        type: string
      avatar_url:
        type: string
      avatar_thumb_url:
        type: string
      two_factor_auth:
        type: string
      max_projects:
        type: integer
      max_organizations:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      timezone:
        type: string
      fraud_score:
        type: string
      last_login_at:
        type: string
        format: date-time
      emails:
        type: array
        items:
          $ref: '#/definitions/Href'
      href:
        type: string
      phone_number:
        type: string
      customdata:
        type: string
  UserUpdateInput:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      timezone:
        type: string
      password:
        type: string
      avatar:
        type: string
        format: binary
      customdata:
        type: string
  UserCreateInput:
    required:
    - emails
    - first_name
    - last_name
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      timezone:
        type: string
      password:
        type: string
      level:
        type: string
      title:
        type: string
      company_name:
        type: string
      company_url:
        type: string
      verified_at:
        type: string
        format: date-time
      social_accounts:
        type: object
        properties: {}
      two_factor_auth:
        type: string
      avatar:
        type: string
        format: binary
      emails:
        type: array
        items:
          $ref: '#/definitions/EmailInput'
      locked:
        type: boolean
      customdata:
        type: string
  UserList:
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/User'
      meta:
        $ref: '#/definitions/Meta'
  InstancesBatchCreateInput_ip_addresses:
    type: object
    properties:
      address_family:
        type: number
        format: integer
        example: 4 or 6
        description: Address Family for IP Address
      public:
        type: boolean
        example: false
        description: Address Type for IP Address
      cidr:
        type: number
        format: integer
        example: 28..32 for IPv4 addresses
        description: Cidr Size for the IP Block created. Valid values depends on the operating system been provisioned.
      ip_reservations:
        type: array
        description: UUIDs of any IP reservations to use when assigning IPs
        items:
          type: string
  InstancesBatchCreateInput_batches:
    type: object
    properties:
      plan:
        type: string
      hostname:
        type: string
      hostnames:
        type: array
        items:
          type: string
      description:
        type: string
      billing_cycle:
        type: string
      operating_system:
        type: string
      always_pxe:
        type: boolean
      userdata:
        type: string
      locked:
        type: boolean
      termination_time:
        type: string
        format: date-time
      tags:
        type: array
        items:
          type: string
      project_ssh_keys:
        type: array
        items:
          type: string
          format: uuid
      user_ssh_keys:
        type: array
        items:
          type: string
          format: uuid
      features:
        type: array
        items:
          type: string
      customdata:
        type: string
      ip_addresses:
        type: array
        items:
          $ref: '#/definitions/InstancesBatchCreateInput_ip_addresses'
  BgpNeighborData_routes_in:
    type: object
    properties:
      route:
        type: string
        example: 10.32.16.0/31
        description: A project network
      exact:
        type: boolean
  BgpNeighborData_routes_out:
    type: object
    properties:
      route:
        type: string
        example: 0.0.0.0/0
      exact:
        type: boolean
  PortConvertLayer3Input_request_ips:
    type: object
    properties:
      address_family:
        type: integer
      public:
        type: boolean
  SpotMarketRequestCreateInput_instance_attributes:
    type: object
    properties:
      plan:
        type: string
      hostname:
        type: string
      hostnames:
        type: array
        items:
          type: string
      description:
        type: string
      billing_cycle:
        type: string
      operating_system:
        type: string
      always_pxe:
        type: boolean
      userdata:
        type: string
      locked:
        type: boolean
      termination_time:
        type: string
        format: date-time
      tags:
        type: array
        items:
          type: string
      project_ssh_keys:
        type: array
        items:
          type: string
          format: uuid
      user_ssh_keys:
        type: array
        items:
          type: string
          format: uuid
      features:
        type: array
        items:
          type: string
      customdata:
        type: string
      public_ipv4_subnet_size:
        type: integer
      private_ipv4_subnet_size:
        type: integer
